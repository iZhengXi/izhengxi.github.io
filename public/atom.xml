<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HowarZheng&#39;s Blog</title>
  
  
  <link href="https://howarzheng.com/atom.xml" rel="self"/>
  
  <link href="https://howarzheng.com/"/>
  <updated>2022-01-26T15:43:46.000Z</updated>
  <id>https://howarzheng.com/</id>
  
  <author>
    <name>HowarZheng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>win10环境hexo-admin插件实现本地后台管理博客</title>
    <link href="https://howarzheng.com/2022/01/25/win10%E7%8E%AF%E5%A2%83hexo-admin%E6%8F%92%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%9C%AC%E5%9C%B0%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E5%8D%9A%E5%AE%A2/"/>
    <id>https://howarzheng.com/2022/01/25/win10%E7%8E%AF%E5%A2%83hexo-admin%E6%8F%92%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%9C%AC%E5%9C%B0%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-01-25T10:02:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo每次发布和部署文章都需要在命令行下操作，比较繁琐，<code>hexo-admin</code>这个插件可以给你的Hexo博客搭建一个后台。<br><a name="toc-heading-1"></a></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br><span class="line">hexo server -d</span><br><span class="line">open http://localhost:4000/admin</span><br></pre></td></tr></table></figure><p>之后，在浏览器里打开<a class="link"   href="http://localhost:4000/admin%E5%8D%B3%E5%8F%AF%E8%AE%BF%E9%97%AE%E5%90%8E%E5%8F%B0%E3%80%82" >http://localhost:4000/admin即可访问后台。<i class="fas fa-external-link-alt"></i></a><br />后台界面：<br /><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/25/IuSb4sDmdRyCn7P.png"                                     ><br />可以直接新建文章，新建页面，写完文章后还能直接部署。<br />部署之前需要先进行配置：<br />在站点根目录新建文件<code>hexo-generate.bat</code>，在文件中写入<code>hexo g -d</code>。<br />之后，打开根目录站点配置文件：<br /><strong>新增</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">admin:</span></span><br><span class="line">    <span class="attr">deployCommand:</span> <span class="string">&#x27;hexo-generate.bat&#x27;</span></span><br></pre></td></tr></table></figure><p>现在，后台写完文章可以直接部署了。<br />为了更好的随时随地写文章，可以设置win10开机自启<code>hexo serve</code><br />需要创建2个脚本，一个为vbs脚本，一个为bat脚本。<br />vbs脚本放到启动文件夹，用于运行bat脚本，而bat脚本用于启动hexo server<br /><strong>创建vbs脚本</strong><br /><code>set ws=WScript.CreateObject(&quot;WScript.Shell&quot;)</code><br /><code>ws.Run &quot;E:\\WorkSpace\\webProject\\Hexo-blog\\hexo-server.bat /start&quot;,0</code><br /><strong>创建bat脚本</strong><br /><code>E:</code><br /><code>cd E:/WorkSpace/webProject/Hexo-Blog</code><br /><code>hexo s -d</code><br />将<strong>vbs脚本</strong>放到启动文件夹<br />win10 启动文件夹目录为<br /><code>C:\Users\你的用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code><br />这样就能实现开机启动<code>hexo server</code>了，剩下的一切都可以交给浏览器和<code>hexo-admin</code>了。如果使用七牛，则可以使用<code>hexo-admin with qiniu</code>。</p><blockquote><p><strong>后台还可以设置密码访问。</strong></p></blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/25/SAUP5W3pwhTkycm.png"                                     ><br />后台设置<strong>用户名</strong>和<strong>密码</strong>后，将它复制到<strong>根目录站点配置</strong>文件即可。</p><blockquote><p>参考文献：</p></blockquote><ol><li><a class="link"   href="https://blog.csdn.net/upc_xbt/article/details/54020135" >https://blog.csdn.net/upc_xbt/article/details/54020135<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://segmentfault.com/a/1190000018488921" >https://segmentfault.com/a/1190000018488921<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo每次发布和部署文章都需要在命令行下操作，比较繁琐，&lt;code&gt;hexo-admin&lt;/code&gt;这个插件可以给你的Hexo博客搭建一个后台。&lt;br&gt;&lt;a name=&quot;toc-heading-1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装</summary>
      
    
    
    
    <category term="网站建设" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    <category term="Hexo" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://howarzheng.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题hexo-theme-matery配置DaoVoice 实现在线聊天功能</title>
    <link href="https://howarzheng.com/2022/01/25/Hexo%E4%B8%BB%E9%A2%98hexo-theme-matery%E9%85%8D%E7%BD%AEDaoVoice%20%E5%AE%9E%E7%8E%B0%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9%E5%8A%9F%E8%83%BD/"/>
    <id>https://howarzheng.com/2022/01/25/Hexo%E4%B8%BB%E9%A2%98hexo-theme-matery%E9%85%8D%E7%BD%AEDaoVoice%20%E5%AE%9E%E7%8E%B0%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9%E5%8A%9F%E8%83%BD/</id>
    <published>2022-01-25T10:01:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>DaoVoice 可以提供在线联系的功能，可以让静态博客Hexo更加多样和完整。</strong><br />设置完成效果如下：<br /><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip1.loli.io/2022/01/25/bUaPyOcKD5orTJs.png"                                     ><br><a name="toc-heading-1"></a></p><h2 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h2><p><a name="toc-heading-2"></a></p><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>首先需要注册一个 DaoVoice，<a class="link"   href="http://dashboard.daovoice.io/get-started?invite_code=7f3d6e70" >点击注册<i class="fas fa-external-link-alt"></i></a>。<br />注册成功后，进入后台控制台，进入到 <code>应用设置--&gt;安装到网站</code> 页面，**可以得到一个 ** **<code>app_id</code><strong>：</strong><br /><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip1.loli.io/2022/01/25/mywG9pZqtken3RX.png"                                     ><br />**之后复制下的<code>app_id</code></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/25/ySOsQ39NpXlIcxm.png"                                     ><br />接下来，打开<code>\themes\hexo-theme-matery\layout\_partial</code>文件夹下的<code>footer.ejs</code>文件<br />在文件末尾写入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">i,s,o,g,r,a,m</span>)</span>&#123;i[<span class="string">&quot;DaoVoiceObject&quot;</span>]=r;i[r]=i[r]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;(i[r].q=i[r].q||[]).push(<span class="built_in">arguments</span>)&#125;,i[r].l=<span class="number">1</span>*<span class="keyword">new</span> <span class="built_in">Date</span>();a=s.createElement(o),m=s.getElementsByTagName(o)[<span class="number">0</span>];a.async=<span class="number">1</span>;a.src=g;a.charset=<span class="string">&quot;utf-8&quot;</span>;m.parentNode.insertBefore(a,m)&#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">&quot;script&quot;</span>,(<span class="string">&#x27;https:&#x27;</span> == <span class="built_in">document</span>.location.protocol ? <span class="string">&#x27;https:&#x27;</span> : <span class="string">&#x27;http:&#x27;</span>) + <span class="string">&quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;</span>,<span class="string">&quot;daovoice&quot;</span>)</span><br><span class="line">  daovoice(<span class="string">&#x27;init&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">app_id</span>: <span class="string">&quot;刚刚复制的app_id&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(<span class="string">&#x27;update&#x27;</span>);</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在主题配置文件 <code>_config.yml</code>，添加如下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Online contact </span></span><br><span class="line"><span class="attr">daovoice:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">daovoice_app_id:</span> <span class="string">这里输入前面复制的app_id</span></span><br></pre></td></tr></table></figure><p><a class="link"   href="https://github.com/blinkfox/hexo-theme-matery" >hexo-theme-matery<i class="fas fa-external-link-alt"></i></a>主题下聊天的按钮会和其他按钮重叠到一起，可以到聊天设置，修改下按钮的位置：<br /><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip1.loli.io/2022/01/25/8QbHw5uLxNmreIF.png"                      alt="image.png"                ><br />位置可以在 hexo s 调试模式下进行调试，效果满意后部署就可以看到最终效果啦！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;DaoVoice 可以提供在线联系的功能，可以让静态博客Hexo更加多样和完整。&lt;/strong&gt;&lt;br /&gt;设置完成效果如下：&lt;br /&gt;&lt;img  
                     lazyload
                     s</summary>
      
    
    
    
    <category term="网站建设" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    <category term="Hexo" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://howarzheng.com/tags/Hexo/"/>
    
    <category term="matery" scheme="https://howarzheng.com/tags/matery/"/>
    
  </entry>
  
  <entry>
    <title>scrapy安装失败</title>
    <link href="https://howarzheng.com/2022/01/25/scrapy%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5/"/>
    <id>https://howarzheng.com/2022/01/25/scrapy%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5/</id>
    <published>2022-01-25T09:59:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><a name="toc-heading-1"></a></p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>安装scrapy时提示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: Microsoft Visual C++ <span class="number">14.0</span> <span class="keyword">is</span> required. Get it <span class="keyword">with</span> <span class="string">&quot;Microsoft Visual C++ Build Tools&quot;</span>: http://landinghub.visualstudio.com/visual-cpp-build-tools</span><br></pre></td></tr></table></figure><p><a name="toc-heading-2"></a></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p><br />去该网站：<a class="link"   href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted" >https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted<i class="fas fa-external-link-alt"></i></a> 下载对应的twisted的安装文件安装后即可。<br />例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install <span class="string">&quot;C:\Users\Howar Zheng\Downloads\Twisted-18.9.0-cp37-cp37m-win32.whl&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a name=&quot;toc-heading-1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;安装scrapy时提示：&lt;/p&gt;
&lt;figure c</summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Python" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/Python/"/>
    
    
    <category term="Python" scheme="https://howarzheng.com/tags/Python/"/>
    
    <category term="scrapy" scheme="https://howarzheng.com/tags/scrapy/"/>
    
  </entry>
  
  <entry>
    <title>只需3行代码15秒就能抠图的Python神库</title>
    <link href="https://howarzheng.com/2022/01/25/%E5%8F%AA%E9%9C%803%E8%A1%8C%E4%BB%A3%E7%A0%8115%E7%A7%92%E5%B0%B1%E8%83%BD%E6%8A%A0%E5%9B%BE%E7%9A%84Python%E7%A5%9E%E5%BA%93/"/>
    <id>https://howarzheng.com/2022/01/25/%E5%8F%AA%E9%9C%803%E8%A1%8C%E4%BB%A3%E7%A0%8115%E7%A7%92%E5%B0%B1%E8%83%BD%E6%8A%A0%E5%9B%BE%E7%9A%84Python%E7%A5%9E%E5%BA%93/</id>
    <published>2022-01-25T09:54:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>这是一款网站：</em><a href="https://www.remove.bg/"><em>Remove.bg</em></a><br /><em>可以通过调用网站提供的API进行抠图，每月可以免费抠图50张。唯一缺点就是分辨率限制。</em><br><a name="toc-heading-1"></a></p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><p><strong>第一步：</strong><br /><a class="link"   href="https://www.remove.bg/api" >网站上注册获取 API<i class="fas fa-external-link-alt"></i></a><br /><strong>第二步：</strong><br />安装抠图库<br /><code>pip install removebg</code><br /><strong>实现抠图</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> removebg <span class="keyword">import</span> RemoveBg</span><br><span class="line">rmbg = RemoveBg(<span class="string">&quot;WPZ2Q4fraseKfAN9PPxxxxxx&quot;</span>, <span class="string">&quot;error.log&quot;</span>) <span class="comment"># 引号内是你获取的API</span></span><br><span class="line">rmbg.remove_background_from_img_file(<span class="string">&quot;C:/Users/sony/Desktop/1.jpg&quot;</span>) <span class="comment">#图片地址</span></span><br></pre></td></tr></table></figure><p><a name="toc-heading-2"></a></p><h2 id="批量抠图"><a href="#批量抠图" class="headerlink" title="批量抠图"></a>批量抠图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> removebg <span class="keyword">import</span> RemoveBg</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">rmbg = RemoveBg(<span class="string">&quot;WPZ2Q4fraseKfAN9PPxxxxxx&quot;</span>, <span class="string">&quot;error.log&quot;</span>)</span><br><span class="line">path = <span class="string">&#x27;%s/picture&#x27;</span>%os.getcwd() <span class="comment">#图片放到程序的同级文件夹 picture 里面</span></span><br><span class="line"><span class="keyword">for</span> pic <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">    rmbg.remove_background_from_img_file(<span class="string">&quot;%s\%s&quot;</span>%(path,pic))</span><br></pre></td></tr></table></figure><p>GitHub 库地址：<a class="link"   href="https://github.com/brilam/remove-bg" >https://github.com/brilam/remove-bg<i class="fas fa-external-link-alt"></i></a></p><blockquote><p>参考文献</p></blockquote><ol><li><a class="link"   href="https://zhuanlan.zhihu.com/p/73073456" >只需 3 行代码 5 秒就能抠图的 Python 神库<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://blog.csdn.net/Quentin_he/article/details/97569625" >python利用Remove.bg接口自动去背景<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.remove.bg/" >Remove.bg<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;em&gt;这是一款网站：&lt;/em&gt;&lt;a href=&quot;https://www.remove.bg/&quot;&gt;&lt;em&gt;Remove.bg&lt;/em&gt;&lt;/a&gt;&lt;br /&gt;&lt;em&gt;可以通过调用网站提供的API进行抠图，每月可以免费抠图50张。唯一缺点就是分辨率限制。&lt;/em&gt;&lt;br&gt;&lt;a n</summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Python" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/Python/"/>
    
    
    <category term="Python" scheme="https://howarzheng.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Get和Post请求的区别</title>
    <link href="https://howarzheng.com/2022/01/25/Get%E5%92%8CPost%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://howarzheng.com/2022/01/25/Get%E5%92%8CPost%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-01-25T09:52:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>Get请求和Post请求是HPPT中最常用的请求，那么他们有什么区别呢？</em><br /><strong>我们来看看标准答案：</strong></p><blockquote><ul><li>GET在浏览器回退时是无害的，而POST会再次提交请求。</li><li>GET产生的URL地址可以被Bookmark，而POST不可以。</li><li>GET请求会被浏览器主动cache，而POST不会，除非手动设置。</li><li>GET请求只能进行url编码，而POST支持多种编码方式。</li><li>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</li><li>GET请求在URL中传送的参数是有长度限制的，而POST么有。</li><li>对参数的数据类型，GET只接受ASCII字符，而POST没有限制。</li><li>GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</li><li>GET参数通过URL传递，POST放在Request body中。</li></ul></blockquote><p>以上标准答案来自<a class="link"   href="https://www.w3schools.com/" >w3schools<i class="fas fa-external-link-alt"></i></a>。<br />到这里前端的小伙伴们可能会说，他们的区别是：</p><blockquote><p>GET使用URL或Cookie传参，而POST将数据放在BODY中</p></blockquote><p><strong>这其实是错的！</strong><br />GET和POST是由HTTP协议定义的。在HTTP协议中，Method和Data（URL， Body， Header）是正交的两个概念，也就是说，使用哪个Method与应用层的数据如何传输是没有相互关系的。<br />HTTP没有要求，如果Method是POST数据就要放在BODY中。也没有要求，如果Method是GET，数据（参数）就一定要放在URL中而不能放在BODY中。<br />因此网上的那些说法都是错的！<br />HTTP是什么？Hyper Text Transfer Protocol（超文本传输协议）的缩写，是基于TCP/IP的关于数据如何在万维网中如何通信的协议。<br /><strong>具有以下特征：</strong></p><ul><li>基于tcp/ip、一种网络应用层协议、超文本传输协议HyperText Transfer Protocol</li><li>工作方式：客户端请求服务端应答的模式</li><li>快速：无状态连接，灵活：可以传输任意对象，对象类型由Content-Type标记</li><li>客户端请求request消息包括以下格式：请求行（request line）、请求头部（header）、空行、请求数据。</li></ul><p>我们惊讶的发现，HTTP、Get和Post他们的底层都是TCP/IP，也就是说，GET/POST都是TCP链接。GET能做的，POST也能做。你要给GET加上request body，给POST带上url参数，技术上是完全行的通的。<br />HTTP只是个行为准则，而TCP才是GET和POST怎么实现的基本。<br />另外，GET和POST还有一个重大区别：</p><blockquote><p>GET产生一个TCP数据包；POST产生两个TCP数据包。</p></blockquote><ul><li>对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）；</li><li>而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据）。<blockquote><p>参考文献：</p></blockquote></li></ul><ol><li><a class="link"   href="https://www.oschina.net/news/77354/http-get-post-different" >https://www.oschina.net/news/77354/http-get-post-different<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.w3schools.com/" >https://www.w3schools.com/<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://juejin.im/entry/597ca6caf265da3e301e64db" >https://juejin.im/entry/597ca6caf265da3e301e64db<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;em&gt;Get请求和Post请求是HPPT中最常用的请求，那么他们有什么区别呢？&lt;/em&gt;&lt;br /&gt;&lt;strong&gt;我们来看看标准答案：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;GET在浏览器回退时是无害的，而POST会再次提交请求。&lt;/li</summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Python" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/Python/"/>
    
    
    <category term="Python" scheme="https://howarzheng.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python中正则表达式的基本使用</title>
    <link href="https://howarzheng.com/2022/01/25/Python%E4%B8%AD%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>https://howarzheng.com/2022/01/25/Python%E4%B8%AD%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2022-01-25T09:22:09.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>字符串</strong>是编程时涉及到的最多的一种<strong>数据结构</strong>，对字符串进行操作的需求几乎无处不在。比如判断一个字符串是否是合法的Email地址，虽然可以编程提取@前后的子串，再分别判断是否是单词和域名，但这样做不但麻烦，而且代码难以复用。<br />正则表达式是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，我们就认为它<strong>“匹配”</strong>了，否则，该字符串就是不合法的。<br />所以我们判断一个字符串是否是合法的Email的方法是：<br /><strong>创建一个匹配Email的正则表达式；</strong></p><ol><li>用该正则表达式去匹配用户的输入来判断是否合法。</li><li>因为正则表达式也是用字符串表示的，所以，我们要首先了解如何用字符来描述字符。</li></ol><p>正则表达式的大致匹配过程是：依次拿出表达式和文本中的字符比较，如果每一个字符都能匹配，则匹配成功；一旦有匹配不成功的字符则匹配失败。</p><blockquote><p>官方文档：<br>中文：<a class="link"   href="https://docs.python.org/zh-cn/3/library/re.html" >https://docs.python.org/zh-cn/3/library/re.html<i class="fas fa-external-link-alt"></i></a><br>英文：<a class="link"   href="https://docs.python.org/3/library/re.html" >https://docs.python.org/3/library/re.html<i class="fas fa-external-link-alt"></i></a></p></blockquote><p>使用之前，需要引入正则模块(Regular Expression)：<br /><code>import re #引入正则表达式</code><br />主要使用的方法 match(), 从左到右进行匹配：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pattern 为要校验的规则</span></span><br><span class="line"><span class="comment">#str 为要进行校验的字符串</span></span><br><span class="line">result = re.match(pattern, <span class="built_in">str</span>) </span><br><span class="line"><span class="comment">#如果result不为None,则group方法则对result进行数据提取</span></span><br><span class="line">result.group()</span><br></pre></td></tr></table></figure><p>匹配规则：<br />1️⃣单字符匹配规则：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">字符    功能</span><br><span class="line">.       匹配任意<span class="number">1</span>个字符(除了\n)</span><br><span class="line">[]      匹配[]中列举的字符</span><br><span class="line">\d      匹配数字,也就是<span class="number">0</span>-<span class="number">9</span></span><br><span class="line">\D      匹配非数字,也就是匹配不是数字的字符</span><br><span class="line">\s      匹配空白符,也就是 空格\tab</span><br><span class="line">\S      匹配非空白符,\s取反</span><br><span class="line">\w      陪陪单词字符, a-z, A-Z, <span class="number">0</span>-<span class="number">9</span>, _</span><br><span class="line">\W      匹配非单词字符, \w取反</span><br></pre></td></tr></table></figure><p>2️⃣表示数量的规则：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">字符    功能</span><br><span class="line">*       匹配前一个字符出现<span class="number">0</span>次多次或者无限次,可有可无,可多可少</span><br><span class="line">+       匹配前一个字符出现<span class="number">1</span>次多次或则无限次,直到出现一次</span><br><span class="line">?       匹配前一个字符出现<span class="number">1</span>次或者<span class="number">0</span>次,要么有<span class="number">1</span>次,要么没有</span><br><span class="line">&#123;m&#125;     匹配前一个字符出现m次</span><br><span class="line">&#123;m,&#125;    匹配前一个字符至少出现m次</span><br><span class="line">&#123;m,n&#125;   匹配前一个字符出现m到n次</span><br></pre></td></tr></table></figure><p>下表列出了正则表达式模式语法中的特殊元素。如果你使用模式的同时提供了可选的标志参数，某些模式元素的含义会改变。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">模式    描述</span><br><span class="line">^    匹配字符串的开头</span><br><span class="line">$    匹配字符串的末尾。</span><br><span class="line">.    匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。</span><br><span class="line">[...]    用来表示一组字符,单独列出：[amk] 匹配 <span class="string">&#x27;a&#x27;</span>，<span class="string">&#x27;m&#x27;</span>或<span class="string">&#x27;k&#x27;</span></span><br><span class="line">[^...]    不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。</span><br><span class="line">re*    匹配<span class="number">0</span>个或多个的表达式。</span><br><span class="line">re+    匹配<span class="number">1</span>个或多个的表达式。</span><br><span class="line">re?    匹配<span class="number">0</span>个或<span class="number">1</span>个由前面的正则表达式定义的片段，非贪婪方式</span><br><span class="line">re&#123; n&#125;     </span><br><span class="line">re&#123; n,&#125;    精确匹配n个前面表达式。</span><br><span class="line">re&#123; n, m&#125;    匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式</span><br><span class="line">a| b    匹配a或b</span><br><span class="line">(re)    G匹配括号内的表达式，也表示一个组</span><br><span class="line">(?imx)    正则表达式包含三种可选标志：i, m, 或 x 。只影响括号中的区域。</span><br><span class="line">(?-imx)    正则表达式关闭 i, m, 或 x 可选标志。只影响括号中的区域。</span><br><span class="line">(?: re)    类似 (...), 但是不表示一个组</span><br><span class="line">(?imx: re)    在括号中使用i, m, 或 x 可选标志</span><br><span class="line">(?-imx: re)    在括号中不使用i, m, 或 x 可选标志</span><br><span class="line">(?<span class="comment">#...)    注释.</span></span><br><span class="line">(?= re)    前向肯定界定符。如果所含正则表达式，以 ... 表示，在当前位置成功匹配时成功，否则失败。但一旦所含表达式已经尝试，匹配引擎根本没有提高；模式的剩余部分还要尝试界定符的右边。</span><br><span class="line">(?! re)    前向否定界定符。与肯定界定符相反；当所含表达式不能在字符串当前位置匹配时成功</span><br><span class="line">(?&gt; re)    匹配的独立模式，省去回溯。</span><br><span class="line">\w    匹配字母数字</span><br><span class="line">\W    匹配非字母数字</span><br><span class="line">\s    匹配任意空白字符，等价于 [\t\n\r\f].</span><br><span class="line">\S    匹配任意非空字符</span><br><span class="line">\d    匹配任意数字，等价于 [<span class="number">0</span>-<span class="number">9</span>].</span><br><span class="line">\D    匹配任意非数字</span><br><span class="line">\A    匹配字符串开始</span><br><span class="line">\Z    匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串。c</span><br><span class="line">\z    匹配字符串结束</span><br><span class="line">\G    匹配最后匹配完成的位置。</span><br><span class="line">\b    匹配一个单词边界，也就是指单词和空格间的位置。例如， <span class="string">&#x27;er\b&#x27;</span> 可以匹配<span class="string">&quot;never&quot;</span> 中的 <span class="string">&#x27;er&#x27;</span>，但不能匹配 <span class="string">&quot;verb&quot;</span> 中的 <span class="string">&#x27;er&#x27;</span>。</span><br><span class="line">\B    匹配非单词边界。<span class="string">&#x27;er\B&#x27;</span> 能匹配 <span class="string">&quot;verb&quot;</span> 中的 <span class="string">&#x27;er&#x27;</span>，但不能匹配 <span class="string">&quot;never&quot;</span> 中的 <span class="string">&#x27;er&#x27;</span>。</span><br><span class="line">\n, \t, 等.    匹配一个换行符。匹配一个制表符。等</span><br><span class="line">\<span class="number">1.</span>..\<span class="number">9</span>    匹配第n个分组的子表达式。</span><br><span class="line">\<span class="number">10</span>    匹配第n个分组的子表达式，如果它经匹配。否则指的是八进制字符码的表达式。</span><br></pre></td></tr></table></figure><p><a name="toc-heading-1"></a></p><h3 id="re库中常用方法"><a href="#re库中常用方法" class="headerlink" title="re库中常用方法"></a>re库中常用方法</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/25/83mX7AGTEdpNVry.png"                      alt="image.png"                ><br><a name="toc-heading-2"></a></p><h3 id="修饰符总结"><a href="#修饰符总结" class="headerlink" title="修饰符总结"></a>修饰符总结</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/25/oik8KEGm6nbaVfC.png"                      alt="image.png"                ><br><a name="toc-heading-3"></a></p><h3 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、匹配email地址:</span><br><span class="line">[\w!<span class="comment">#$%&amp;&#x27;*+/=?^_`&#123;|&#125;~-]+(?:\.[\w!#$%&amp;&#x27;*+/=?^_`&#123;|&#125;~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?</span></span><br><span class="line"><span class="number">2</span>、匹配网址URL：</span><br><span class="line">[a-zA-z]+://[^\s]*</span><br><span class="line"><span class="number">3</span>、匹配<span class="number">18</span>位身份证号：</span><br><span class="line">^(\d&#123;<span class="number">6</span>&#125;)(\d&#123;<span class="number">4</span>&#125;)(\d&#123;<span class="number">2</span>&#125;)(\d&#123;<span class="number">2</span>&#125;)(\d&#123;<span class="number">3</span>&#125;)([<span class="number">0</span>-<span class="number">9</span>]|X)$</span><br><span class="line"><span class="number">4</span>、匹配年月日格式：</span><br><span class="line">([<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">3</span>&#125;[<span class="number">1</span>-<span class="number">9</span>]|[<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">2</span>&#125;[<span class="number">1</span>-<span class="number">9</span>][<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">1</span>&#125;|[<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">1</span>&#125;[<span class="number">1</span>-<span class="number">9</span>][<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">2</span>&#125;|[<span class="number">1</span>-<span class="number">9</span>][<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">3</span>&#125;)-(((<span class="number">0</span>[<span class="number">13578</span>]|<span class="number">1</span>[02])-(<span class="number">0</span>[<span class="number">1</span>-<span class="number">9</span>]|[<span class="number">12</span>][<span class="number">0</span>-<span class="number">9</span>]|<span class="number">3</span>[01]))|((<span class="number">0</span>[<span class="number">469</span>]|<span class="number">11</span>)-(<span class="number">0</span>[<span class="number">1</span>-<span class="number">9</span>]|[<span class="number">12</span>][<span class="number">0</span>-<span class="number">9</span>]|<span class="number">30</span>))|(02-(<span class="number">0</span>[<span class="number">1</span>-<span class="number">9</span>]|[<span class="number">1</span>][<span class="number">0</span>-<span class="number">9</span>]|<span class="number">2</span>[<span class="number">0</span>-<span class="number">8</span>])))</span><br><span class="line"><span class="number">5</span>、匹配整数：</span><br><span class="line">^-?[<span class="number">1</span>-<span class="number">9</span>]\d*$</span><br><span class="line"><span class="number">6</span>、匹配正整数：</span><br><span class="line">^[<span class="number">1</span>-<span class="number">9</span>]\d*$</span><br><span class="line"><span class="number">7</span>、匹配负整数：</span><br><span class="line">^-[<span class="number">1</span>-<span class="number">9</span>]\d*$</span><br><span class="line"><span class="number">8</span>、匹配空白行：</span><br><span class="line">\n\s*\r</span><br></pre></td></tr></table></figure><blockquote><p>参考文献：</p></blockquote><ol><li><a class="link"   href="https://www.jianshu.com/p/7fa6fe0b39af" >https://www.jianshu.com/p/7fa6fe0b39af<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.jianshu.com/p/773c32dcd254" >https://www.jianshu.com/p/773c32dcd254<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://blog.csdn.net/weixin_40136018/article/details/81183504" >https://blog.csdn.net/weixin_40136018/article/details/81183504<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://blog.csdn.net/weixin_40907382/article/details/79654372" >https://blog.csdn.net/weixin_40907382/article/details/79654372<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;字符串&lt;/strong&gt;是编程时涉及到的最多的一种&lt;strong&gt;数据结构&lt;/strong&gt;，对字符串进行操作的需求几乎无处不在。比如判断一个字符串是否是合法的Email地址，虽然可以编程提取@前后的子串，再分别判断是否是单词和域名，但这样做不但麻烦，而且代</summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Python" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/Python/"/>
    
    
    <category term="Python" scheme="https://howarzheng.com/tags/Python/"/>
    
    <category term="正则表达式" scheme="https://howarzheng.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>免费及收费图床推荐</title>
    <link href="https://howarzheng.com/2022/01/25/%E5%85%8D%E8%B4%B9%E5%8F%8A%E6%94%B6%E8%B4%B9%E5%9B%BE%E5%BA%8A%E6%8E%A8%E8%8D%90/"/>
    <id>https://howarzheng.com/2022/01/25/%E5%85%8D%E8%B4%B9%E5%8F%8A%E6%94%B6%E8%B4%B9%E5%9B%BE%E5%BA%8A%E6%8E%A8%E8%8D%90/</id>
    <published>2022-01-25T09:02:06.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个优秀的图床，能够节省blogger很多时间。<br />时间就是金钱！<br />目前免费的图床我只推荐Github。Github搭配jsdeliver免费CDN，还是能有不错的速度。<br />但由于滥用，jsdeliver目前在国内的访问也很不稳定。<strong>目前jsdeliver的使用限制如下：</strong></p><ul><li>单个文件大小。（实测20M是没有问题的）</li><li>单个仓库最大文件数10000。</li><li>单个仓库容量。（超过50M警告，超过100M封禁）</li></ul><p><strong>jsdeliver的官方说明：</strong><a class="link"   href="https://www.jsdelivr.com/terms/acceptable-use-policy-jsdelivr-net" >https://www.jsdelivr.com/terms/acceptable-use-policy-jsdelivr-net<i class="fas fa-external-link-alt"></i></a><br />基于Github的图床工具目前有<a class="link"   href="https://github.com/Molunerfinn/PicGo" >PicGO<i class="fas fa-external-link-alt"></i></a>（本地）+<a class="link"   href="https://picx.xpoet.cn/" >PicX<i class="fas fa-external-link-alt"></i></a>（在线）。PicGO+Typora是本地Markdown文档写作的一种高效方式，可以一键上传和转义替换图片。<br />PicX是作者<a class="link"   href="https://xpoet.cn/" >@Xpoet<i class="fas fa-external-link-alt"></i></a>基于Github开发的在线图床，目前支持批量上传、图片管理、图片压缩、jsdeliver CDN等功能。使用教程见：<a class="link"   href="https://github.com/XPoet/picx/blob/master/README.md" >https://github.com/XPoet/picx/blob/master/README.md<i class="fas fa-external-link-alt"></i></a><br />​</p><p>付费的图床推荐使用SM.MS。目前SM.MS已推出付费套餐，终身会员只需59美元，会员有100 G的空间、支持支链及有专门的CDN线路。此外SM.MS还推出了ios、ipad和Mac APP，对于苹果全家桶的人更是值得推荐。<br />目前SM.MS关闭了匿名上传功能（禁止游客上传），滥用减少，也常常搞活动，例如我就只花了29美元购买。</p><blockquote><p>SM.MS：由于关闭游客上传后，滥用减少，  SM.MS 图床的运营成本骤减，因此我们推出了 SM.MS 新年优惠，终身会员仅需 29 美元，使用优惠码 VMP6OUXH24 购买即可享受 VIP 服务，购买链接 <a class="link"   href="https://sa.net/r/12" >https://sa.net/r/12<i class="fas fa-external-link-alt"></i></a>（2022.01.25）</p></blockquote><p>为了博客图片的稳定访问，我也不打算折腾了，目前已经入手SM.MS终身会员。不过，也不保证SM.MS真的能永久运行，每篇博客文章也都在<a class="link"   href="https://www.yuque.com/" >语雀<i class="fas fa-external-link-alt"></i></a>进行了备份。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一个优秀的图床，能够节省blogger很多时间。&lt;br /&gt;时间就是金钱！&lt;br /&gt;目前免费的图床我只推荐Github。Github搭配jsdeliver免费CDN，还是能有不错的速度。&lt;br /&gt;但由于滥用，jsdeliver目前在国内的访问也很不稳定。&lt;strong&gt;</summary>
      
    
    
    
    <category term="网站建设" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="jsdeliver" scheme="https://howarzheng.com/tags/jsdeliver/"/>
    
    <category term="Github" scheme="https://howarzheng.com/tags/Github/"/>
    
    <category term="CDN" scheme="https://howarzheng.com/tags/CDN/"/>
    
    <category term="PicX" scheme="https://howarzheng.com/tags/PicX/"/>
    
    <category term="SM.MS" scheme="https://howarzheng.com/tags/SM-MS/"/>
    
  </entry>
  
  <entry>
    <title>Python中if __name__ == &#39;__main__&#39; 该如何正确理解?</title>
    <link href="https://howarzheng.com/2022/01/25/Python%E4%B8%ADif%20__name__%20==%20&#39;__main__&#39;%20%E8%AF%A5%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%90%86%E8%A7%A3_/"/>
    <id>https://howarzheng.com/2022/01/25/Python%E4%B8%ADif%20__name__%20==%20&#39;__main__&#39;%20%E8%AF%A5%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%90%86%E8%A7%A3_/</id>
    <published>2022-01-25T06:32:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个python的文件有两种使用的方法，第一是直接作为脚本执行，第二是import到其他的python脚本中被调用（模块重用）执行。而<code>if __name__ == &#39;main&#39;:</code>的作用就是控制这两种情况执行代码的过程，存在<code>if __name__ == &#39;main&#39;:</code>时，该脚本可以直接运行，但是作为模块导入后则不会提前运行。<br />例如test.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#test.py</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;import the module&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hello, World!&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"><span class="comment">#end</span></span><br></pre></td></tr></table></figure><p>直接运行该程序，会输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;python test.py</span><br><span class="line"><span class="keyword">import</span> the module</span><br><span class="line">Hello, World!</span><br></pre></td></tr></table></figure><p><strong>同时输出了’import the module’和’Hello, World!’</strong><br />说明:<code>__name__ == &#39;__main__&#39;</code>是成立的，所以执行了下面的<code>main()</code><br /><strong>接下来请我们用import的方式</strong>，在CMD中输入<code>python</code>，再输入<code>import test</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;python</span><br><span class="line">Python <span class="number">3.6</span><span class="number">.5</span> |Anaconda, Inc.| (default, Mar <span class="number">29</span> <span class="number">2018</span>, <span class="number">13</span>:<span class="number">32</span>:<span class="number">41</span>) [MSC v<span class="number">.1900</span> <span class="number">64</span> bit (AMD64)] on win32</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> test</span><br><span class="line"><span class="keyword">import</span> the module    <span class="comment">#只输出了这个，没有Hello, World!</span></span><br><span class="line"><span class="comment">#这个时候</span></span><br><span class="line">&gt;&gt;&gt;test.__name__             </span><br><span class="line"><span class="string">&#x27;test&#x27;</span></span><br><span class="line">&gt;&gt;&gt;__name__                     </span><br><span class="line"><span class="string">&#x27;__main__&#x27;</span></span><br></pre></td></tr></table></figure><p>只输出了’import the module’，没有输出’Hello, World!’<br />可以看出这个时候test模块的<strong>name</strong>=’test’<br />而当前程序的<strong>name</strong>=’<strong>main</strong>‘<br />无论怎样，test.py中的<strong>name</strong> == ‘<strong>main</strong>‘都不会成立的，也就意味着，当你是通过import的方法来执行这个.py文件时，不能运行if <strong>name</strong> == ‘<strong>main</strong>‘:下面的语句或者函数。<br />总结：<br /><strong>name</strong> 是当前模块名，当模块被直接运行时模块名为 <strong>main</strong> 。这句话的意思就是，当模块被直接运行时，以下代码块将被运行，当模块是被导入时，代码块不被运行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一个python的文件有两种使用的方法，第一是直接作为脚本执行，第二是import到其他的python脚本中被调用（模块重用）执行。而&lt;code&gt;if __name__ == &amp;#39;main&amp;#39;:&lt;/code&gt;的作用就是控制这两种情况执行代码的过程，存在&lt;code</summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Python" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/Python/"/>
    
    
    <category term="Python" scheme="https://howarzheng.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Keep主题】为Hexo博客添加谷歌广告</title>
    <link href="https://howarzheng.com/2022/01/25/%E3%80%90Keep%E4%B8%BB%E9%A2%98%E3%80%91%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B0%B7%E6%AD%8C%E5%B9%BF%E5%91%8A/"/>
    <id>https://howarzheng.com/2022/01/25/%E3%80%90Keep%E4%B8%BB%E9%A2%98%E3%80%91%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B0%B7%E6%AD%8C%E5%B9%BF%E5%91%8A/</id>
    <published>2022-01-25T03:32:06.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>本博客使用keep主题，在主题文件夹<code>themes/keep/layout/layout.ejs</code>中加入谷歌广告代码即可。<br /><strong>例如：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;&lt;%= config.language %&gt;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">&lt;%- partial(&#x27;_partial/head&#x27;) %&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">data-ad-client</span>=<span class="string">&quot;ca-pub-7835998003747351&quot;</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">&lt;%- body %&gt;</span></span><br><span class="line"><span class="xml">&lt;%- partial(&#x27;_partial/scripts&#x27;) %&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>待谷歌审核通过后，下载<code>ads.txt</code>文件，并上传到Hexo的文档源文件夹<code>source/</code>下（也就是网站根目录下）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本博客使用keep主题，在主题文件夹&lt;code&gt;themes/keep/layout/layout.ejs&lt;/code&gt;中加入谷歌广告代码即可。&lt;br /&gt;&lt;strong&gt;例如：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascrip</summary>
      
    
    
    
    <category term="网站建设" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="谷歌广告" scheme="https://howarzheng.com/tags/%E8%B0%B7%E6%AD%8C%E5%B9%BF%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>Linux下安装软件的几种方法</title>
    <link href="https://howarzheng.com/2022/01/23/Linux%E4%B8%8B%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://howarzheng.com/2022/01/23/Linux%E4%B8%8B%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</id>
    <published>2022-01-23T07:32:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先，我们来看Linux的各个目录的作用。<br /><strong><em>Linux的目录像一颗树：</em></strong><br /></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip1.loli.io/2022/01/25/RCw9iTzF5JPpqQA.png"                      alt="image.png"                ></p><p><br />每个目录作用如下：<br /><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/25/GlwjsxHNb1UWOgv.png"                      alt="image.png"                ><br /><strong><em>了解了个目录作用后，现在接受Linux下安装应用程序的几种方式。</em></strong><br /><br><a name="toc-heading-1"></a></p><h2 id="一、rpm包安装方式步骤："><a href="#一、rpm包安装方式步骤：" class="headerlink" title="一、rpm包安装方式步骤："></a>一、rpm包安装方式步骤：</h2><p>1、找到相应的软件包，比如soft.version.rpm，下载到本机某个目录；<br />2、打开一个终端，su -成root用户；<br />3、cd soft.version.rpm所在的目录；<br />4、输入rpm -ivh soft.version.rpm<br /><strong>详细介绍：</strong><br /><strong>1. 安装：</strong><br />　　我只需简单的一句话，就可以说完。执行：<br />　　rpm –ivh rpm的软件包名<br />　 更高级的，请见下表：<br />　　rpm参数 参数说明<br />　　-i 安装软件<br />　　-t 测试安装，不是真的安装<br />　　-p 显示安装进度<br />　　-f 忽略任何错误<br />　　-U 升级安装<br />　　-v 检测套件是否正确安装<br />　　这些参数可以同时采用。更多的内容可以参考RPM的命令帮助。<br /><strong>2. 卸载：</strong><br />　　我同样只需简单的一句话，就可以说完。执行：<br />　　rpm –e 软件名<br />　　不过要注意的是，后面使用的是软件名，而不是软件包名。例如，要安装software-1.2.3-1.i386.rpm这个包时，应执行：<br />　　rpm –ivh software-1.2.3-1.i386.rpm<br />　　而当卸载时，则应执行：<br />　　rpm –e software。<br /><strong>另外，在Linux中还提供了象GnoRPM、kpackage等图形化的RPM工具，使得整个过程会更加简单。</strong><br><a name="toc-heading-2"></a></p><h2 id="二、deb包安装方式步骤："><a href="#二、deb包安装方式步骤：" class="headerlink" title="二、deb包安装方式步骤："></a>二、deb包安装方式步骤：</h2><p>1、找到相应的软件包，比如soft.version.deb，下载到本机某个目录；<br />2、打开一个终端，su -成root用户；<br />3、cd soft.version.deb所在的目录；<br />4、输入dpkg -i soft.version.deb<br /><strong>详细介绍：</strong><br />这是Debian Linux提供的一个包管理器，它与RPM十分类似。但由于RPM出现得更早，所以在各种版本的Linux都常见到。而debian的包管理器dpkg则只出现在Debina Linux中，其它Linux版本一般都没有。<br /><strong>1. 安装</strong><br />　 dpkg –i deb的软件包名<br />　　如：dpkg –i software-1.2.3-1.deb<br /><strong>2. 卸载</strong><br />　　 dpkg –e 软件名<br />　　如：dpkg –e software<br /><strong>3.查询：</strong>查询当前系统安装的软件包：<br />dpkg –l ‘_软件包名_’<br />如：dpkg –l ‘_software_‘<br><a name="toc-heading-3"></a></p><h2 id="三、tar-gz源代码包安装方式："><a href="#三、tar-gz源代码包安装方式：" class="headerlink" title="三、tar.gz源代码包安装方式："></a>三、tar.gz源代码包安装方式：</h2><p>1、找到相应的软件包，比如soft.tar.gz，下载到本机某个目录；<br />2、打开一个终端，su -成root用户；<br />3、cd soft.tar.gz所在的目录；<br />4、tar -xzvf soft.tar.gz //一般会生成一个soft目录<br />5、cd soft<br />6、./configure<br />7、make<br />8、make install<br /><strong>详细介绍：</strong></p><ol><li><strong>安装：</strong><br />　　整个安装过程可以分为以下几步：<br />　　1） 取得应用软件：通过下载、购买光盘的方法获得；<br />　　2）解压缩文件：一般tar包，都会再做一次压缩，如gzip、bz2等，所以你需要先解压。如果是最常见的gz格式，则可以执行：“tar –xvzf 软件包名”，就可以一步完成解压与解包工作。如果不是，则先用解压软件，再执行“tar –xvf 解压后的tar包”进行解包；<br />　　3） 阅读附带的INSTALL文件、README文件；<br />　　4） 执行“./configure”命令为编译做好准备；<br />　　5） 执行“make”命令进行软件编译；<br />　　6） 执行“make install”完成安装；<br />　　7） 执行“make clean”删除安装时产生的临时文件。<br />　　好了，到此大功告成。我们就可以运行应用程序了。但这时，有的读者就会问，我怎么执行呢？这也是一个Linux特色的问题。其实，一般来说， Linux的应用软件的可执行文件会存放在/usr/local/bin目录下！不过这并不是“放四海皆准”的真理，最可靠的还是看这个软件的 INSTALL和README文件，一般都会有说明。</li><li><strong>卸载：</strong><br />　　通常软件的开发者很少考虑到如何卸载自己的软件，而tar又仅是完成打包的工作，所以并没有提供良好的卸载方法。<br />　　那么是不是说就不能够卸载呢！其实也不是，有两个软件能够解决这个问题，那就是Kinstall和Kife，它们是tar包安装、卸载的黄金搭档。<br><a name="toc-heading-4"></a><h2 id="四、tar-bz2源代码包安装方式："><a href="#四、tar-bz2源代码包安装方式：" class="headerlink" title="四、tar.bz2源代码包安装方式："></a>四、tar.bz2源代码包安装方式：</h2>1、找到相应的软件包，比如soft.tar.bz2，下载到本机某个目录；<br />2、打开一个终端，su -成root用户；<br />3、cd soft.tar.bz2所在的目录；<br />4、tar -xjvf soft.tar.bz2 //一般会生成一个soft目录<br />5、cd soft<br />6、./configure<br />7、make<br />8、make install<br><a name="toc-heading-5"></a><h2 id="五、apt方式安装：（安装deb包）"><a href="#五、apt方式安装：（安装deb包）" class="headerlink" title="五、apt方式安装：（安装deb包）"></a>五、apt方式安装：（安装deb包）</h2>1、打开一个终端，su -成root用户；<br />2、apt-cache search soft 注：soft是你要找的软件的名称或相关信息<br />3、如果2中找到了软件soft.version，则用apt-get install soft.version命令安装软件<br />注：只要你可以上网，只需要用apt-cache search查找软件，用apt-get install软件<br />详细介绍：<br />apt-get是debian，ubuntu发行版的包管理工具，与红帽中的yum工具非常类似。<br />apt-get命令一般需要<a class="link"   href="http://baike.baidu.com/view/3967294.htm" >root权限<i class="fas fa-external-link-alt"></i></a>执行，所以一般跟着sudo命令例sudo apt-get xxxx<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">apt-get install packagename——安装一个新软件包（参见下文的aptitude）</span><br><span class="line">apt-get remove packagename——卸载一个已安装的软件包（保留配置文件）</span><br><span class="line">apt-get --purge remove packagename——卸载一个已安装的软件包（删除配置文件）</span><br><span class="line">dpkg --force-all --purge packagename ——有些软件很难卸载，而且还阻止了别的软件的应用，就可以用这个，不过有点冒险。</span><br><span class="line">apt-get autoremove——因为apt会把已装或已卸的软件都备份在硬盘上，所以如果需要空间的话，可以让这个命令来删除你已经删掉的软件。</span><br><span class="line">apt-get autoclean——定期运行这个命令来清除那些已经卸载的软件包的.deb文件。通过这种方式，可以释放大量的磁盘空间。如果需求十分迫切，可以使用apt-get clean以释放更多空间。这个命令会将已安装软件包裹的.deb文件一并删除。</span><br><span class="line">apt-get clean——这个命令会把安装的软件的备份也删除，不过这样不会影响软件的使用的。</span><br><span class="line">apt-get upgrade——更新所有已安装的软件包</span><br><span class="line">apt-get dist-upgrade——将系统升级到新版本</span><br><span class="line">apt-cache search string——在软件包列表中搜索字符串</span><br><span class="line">apt-cache showpkg pkgs——显示软件包信息。</span><br><span class="line">apt-cache stats——查看库里有多少软件</span><br><span class="line">apt-cache dumpavail——打印可用软件包列表。</span><br><span class="line">apt-cache show pkgs——显示软件包记录，类似于dpkg –print-avail。</span><br><span class="line">apt-cache pkgnames——打印软件包列表中所有软件包的名称</span><br><span class="line">（需要定期运行这一命令以确保您的软件包列表是最新的）</span><br></pre></td></tr></table></figure><blockquote><p>简单的说： dpkg只能安装已经下载到本地机器上的deb包. apt-get能在线下载并安装deb包,能更新系统,<br>且还能自动处理包与包之间的依赖问题,这个是dpkg工具所不具备的。</p></blockquote></li></ol><p><a name="toc-heading-6"></a></p><h2 id="六、yum方式安装：-安装rpm包"><a href="#六、yum方式安装：-安装rpm包" class="headerlink" title="六、yum方式安装：(安装rpm包)"></a>六、yum方式安装：(安装rpm包)</h2><p>rpm 是linux的一种软件包名称，以.rmp结尾，安装的时候语法为：rpm -ivh。<br />rpm包的安装有个很大的缺点就是文件的关联性太大，有时装一个软件要安装很多其他的软件包，很麻烦。<br />所以为此RedHat小红帽开发了yum安装方法，他可以彻底解决这个关联性的问题，很方便，只要配置两个文件即可安装，安装方法是：yum -y install 。<br />yum并不是一中包，而是安装包的软件。</p><blockquote><p>简单的说： rpm 只能安装已经下载到本地机器上的rpm 包. yum能在线下载并安装rpm包,能更新系统,<br>且还能自动处理包与包之间的依赖问题,这个是rpm 工具所不具备的。</p></blockquote><p><a name="toc-heading-7"></a></p><h2 id="七、bin文件安装："><a href="#七、bin文件安装：" class="headerlink" title="七、bin文件安装："></a>七、bin文件安装：</h2><p>如果你下载到的软件名是soft.bin，一般情况下是个可执行文件，安装方法如下：<br />1、打开一个终端，su -成root用户；<br />2、chmod +x soft.bin<br />3、./soft.bin //运行这个命令就可以安装软件了<br><a name="toc-heading-8"></a></p><h2 id="八、不需要安装的软件："><a href="#八、不需要安装的软件：" class="headerlink" title="八、不需要安装的软件："></a>八、不需要安装的软件：</h2><p>有了些软件，比如lumaqq，是不需要安装的，自带jre解压缩后可直接运行。假设<br />下载的是lumaqq.tar.gz，使用方法如下：<br />1、打开一个终端，su -成root用户；<br />2、tar -xzvf lumaqq.tar.gz //这一步会生成一个叫LumaQQ的目录<br />3、cd LumaQQ<br />4、chmod +x lumaqq //设置lumaqq这个程序文件为可运行<br />5、此时就可以运行lumaqq了，用命令./lumaqq即可，但每次运行要输入全路径或<br />切换到刚才生成的LumaQQ目录里<br />6、为了保证不设置路径就可以用，你可以在/bin目录下建立一个lumaqq的链接，<br />用命令ln -s lumaqq /bin/ 即可，以后任何时候打开一个终端输入lumaqq就可以<br />启动QQ聊天软件了<br />7、 如果你要想lumaqq有个菜单项，使用菜单编辑工具，比如Alacarte Menu<br />Editor，找到上面生成的LumaQQ目录里的lumaqq设置一个菜单项就可以了，当然你<br />也可以直接到 /usr/share/applications目录，按照里面其它*.desktop文件的格<br />式生成一个自己的desktop文件即可。</p><blockquote><p>参考文献：</p></blockquote><ol><li><a class="link"   href="https://blog.csdn.net/m0_37327416/article/details/78779532" >https://blog.csdn.net/m0_37327416/article/details/78779532<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.jianshu.com/p/e5057c1ca1a1" >https://www.jianshu.com/p/e5057c1ca1a1<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先，我们来看Linux的各个目录的作用。&lt;br /&gt;&lt;strong&gt;&lt;em&gt;Linux的目录像一颗树：&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img  
                     lazyload
                    </summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Linux" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/Linux/"/>
    
    
    <category term="Linux" scheme="https://howarzheng.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>用Python打造一个文献下载器</title>
    <link href="https://howarzheng.com/2022/01/23/%E7%94%A8Python%E6%89%93%E9%80%A0%E4%B8%80%E4%B8%AA%E6%96%87%E7%8C%AE%E4%B8%8B%E8%BD%BD%E5%99%A8/"/>
    <id>https://howarzheng.com/2022/01/23/%E7%94%A8Python%E6%89%93%E9%80%A0%E4%B8%80%E4%B8%AA%E6%96%87%E7%8C%AE%E4%B8%8B%E8%BD%BD%E5%99%A8/</id>
    <published>2022-01-23T07:22:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>文献下载有很多插件，例如<a class="link"   href="https://greasyfork.org/zh-CN/scripts/370246-sci-hub-button" >sci-hub button<i class="fas fa-external-link-alt"></i></a>和<a class="link"   href="https://www.scholarscope.cn/" >Scholarscope<i class="fas fa-external-link-alt"></i></a>，但是今天突然想用万能的Python实现一个自动下载文献的功能。<br><a name="toc-heading-1"></a></p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p><a name="toc-heading-2"></a></p><h3 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h3><p>安装完成后，打开<code>Jupyter Notebook</code><br /><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip1.loli.io/2022/01/25/hUSk4uLHjMycmrd.png"                                     ><br /><strong>新建一个空白Python3文件</strong>，保存为<code>pyhub.py</code><br />输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> webbrowser <span class="comment">#打开默认浏览器的标准库</span></span><br><span class="line">hub = <span class="string">&quot;http://sci-hub.tw/&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Please enter DOI&quot;</span>)</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    doi = <span class="built_in">input</span>()</span><br><span class="line">    paper = hub+doi</span><br><span class="line">    webbrowser.<span class="built_in">open</span>(paper)</span><br></pre></td></tr></table></figure><p>点击运行后会自动打开默认浏览器，打开一个类似<code>http://sci-hub.tw/10.1038/s41586-019-1497-4</code>这样的链接，点击下载即可。<br><a name="toc-heading-3"></a></p><h2 id="打包成exe"><a href="#打包成exe" class="headerlink" title="打包成exe"></a>打包成exe</h2><p>为了让程序运行更方便，我们可以利用python的<a class="link"   href="http://www.pyinstaller.org/" >PyInstaller<i class="fas fa-external-link-alt"></i></a>库将程序打包成exe。<br />Python 默认并不包含 PyInstaller 模块，因此需要自行安装 PyInstaller 模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure><p>PyInstaller <strong>语法如下：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller 选项 Python源文件</span><br></pre></td></tr></table></figure><p><a name="toc-heading-4"></a></p><h3 id="PyInstaller-支持的常用选项"><a href="#PyInstaller-支持的常用选项" class="headerlink" title="PyInstaller 支持的常用选项"></a>PyInstaller 支持的常用选项</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip1.loli.io/2022/01/25/CrkYnTVylIOUeK1.png"                                     ><br />因此，我们可以在pyhub.py的目录下执行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pyinstaller -F -w pyhub.py</span><br></pre></td></tr></table></figure><p>执行完毕，便可以看我们生成的exe文件，点击即可执行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;文献下载有很多插件，例如&lt;a class=&quot;link&quot;   href=&quot;https://greasyfork.org/zh-CN/scripts/370246-sci-hub-button&quot; &gt;sci-hub button&lt;i class=&quot;fas fa-external-</summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Python" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/Python/"/>
    
    
    <category term="Python" scheme="https://howarzheng.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>利用Github Actions+Hexo+Github Pages实现完全在线写博客</title>
    <link href="https://howarzheng.com/2022/01/19/%E5%88%A9%E7%94%A8Github%20Actions+Hexo+Github%20Pages%E5%AE%9E%E7%8E%B0%E5%AE%8C%E5%85%A8%E5%9C%A8%E7%BA%BF%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
    <id>https://howarzheng.com/2022/01/19/%E5%88%A9%E7%94%A8Github%20Actions+Hexo+Github%20Pages%E5%AE%9E%E7%8E%B0%E5%AE%8C%E5%85%A8%E5%9C%A8%E7%BA%BF%E5%86%99%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-01-19T08:32:26.000Z</published>
    <updated>2022-01-27T03:13:06.737Z</updated>
    
    <content type="html"><![CDATA[<p><a name="JnUTE"></a></p><h1 id="1、本地安装Hexo"><a href="#1、本地安装Hexo" class="headerlink" title="1、本地安装Hexo"></a>1、本地安装Hexo</h1><p><br />Hexo是基于node.js，所以需要安装<a class="link"   href="https://nodejs.org/en/" >node.js<i class="fas fa-external-link-alt"></i></a>和<a class="link"   href="https://git-scm.com/" >Git<i class="fas fa-external-link-alt"></i></a>(用于提交本地文件到Github)<br />安装好环境后，打开Git Bash，全局安装<code>hexo-cli</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>之后利用hexo命令建立本地站点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init howarzheng.github.io</span><br><span class="line"><span class="built_in">cd</span> howarzheng.github.io</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p><br />执行完毕之后，博客的框架就安装好了。<br />执行下面命令即可预览本地博客内容：<br /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><blockquote><p>Hexo站点和主题相关配置网上有较多教程，这里略。</p></blockquote><p><a name="747ac54f"></a></p><h1 id="2、Github-Actions实现Github-Pages自动发布"><a href="#2、Github-Actions实现Github-Pages自动发布" class="headerlink" title="2、Github Actions实现Github Pages自动发布"></a>2、Github Actions实现Github Pages自动发布</h1><p><br />为了利用Github Actions实现Github Pages自动发布，我们首先需要将我们的Hexo站点文件推送到远程Github仓库分支。<br /><strong>Git配置：</strong><br /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置用户名和邮箱</span></span><br><span class="line"> git config --global user.name <span class="string">&quot;HowarZheng</span></span><br><span class="line"><span class="string"> git config --global user.email &quot;</span>howar.zheng@gmail.com</span><br></pre></td></tr></table></figure><p><br />接着生成 ssh 密钥文件，输入如下命令后直接三次回车即可：<br /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成 ssh 密钥</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;howar.zheng@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><p><br />执行上述命令之后，会生成 id_rsa 和 id_rsa.pub 两个文件，前者是我们私有的，而后者则是对外开放的。<br /><strong>配置公钥：</strong><br />接下来我们需要访问存放网页的仓库，也就是 Hexo 部署以后的仓库，比如：yourname.github.io 这种，访问 Settings -&gt; Deploy keys：<br /><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/27/KjRfOeSGDqoJsVd.jpg"                      alt="howarzhengimage"                ><br />点击Add deploy key添加公钥。Title: HEXO_DEPLOY_PUB；Key: id_rsa.pub内容。<br /><strong>配置私钥：</strong><br />首先在 GitHub 上打开保存 Hexo 的仓库，访问 Settings -&gt; Secrets，然后选择 New secret。Name: HEXO_DEPLOY_PRI。Value: id_rsa内容。<br /><strong>推送本地文件到远程分支：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git init // 初始化版本库</span><br><span class="line">git add . // 添加文件到版本库（只是添加到缓存区），.代表添加文件夹下所有文件 </span><br><span class="line">git commit -m <span class="string">&quot;版本备注&quot;</span></span><br><span class="line">git remote add origin git@github.com:HowarZheng/howarzheng.github.io.git // 关联远程仓库</span><br><span class="line">git push -u origin master // 第一次推送时</span><br><span class="line">git push origin master // 第一次推送后，直接使用该命令即可推送修改</span><br></pre></td></tr></table></figure><p><a name="hOrjt"></a></p><h1 id="3、创建Github-Actions-Workflow"><a href="#3、创建Github-Actions-Workflow" class="headerlink" title="3、创建Github Actions Workflow"></a>3、创建Github Actions Workflow</h1><p>Hexo站点文件在master分支，hexo生成的HTML站点文件在hexo-web分支，图片放在Figure_Bed分支。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-18.04</span></span><br><span class="line">    <span class="attr">if:</span> <span class="string">github.event.repository.owner.id</span> <span class="string">==</span> <span class="string">github.event.sender.id</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">source</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;12&#x27;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">ACTION_DEPLOY_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_PRI</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">          echo &quot;$ACTION_DEPLOY_KEY&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 700 ~/.ssh</span></span><br><span class="line"><span class="string">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          git config --global user.email &quot;howar.zheng@gmail.com&quot;</span></span><br><span class="line"><span class="string">          git config --global user.name &quot;HowarZheng&quot;</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo deploy</span></span><br></pre></td></tr></table></figure><blockquote><p>简单解释一下，当我们推送内容到远程 master 分支的时候，就会触发这个 Workflow。使用 Ubuntu 18.04 作为 hexo deploy 的系统。首先 checkout 源代码，然后设置使用最新的 Node.js v12 LTS 作为 node 解释器。接下来就是创建 SSH 相关的配置文件，注意 secrets.HEXO_DEPLOY_PRI 就是对应我们之前设置的私钥，所以名字一定不要搞错。git config 相关的名字和邮件地址替换成大家自己使用的就好了。最后就是安装 Hexo CLI、各个依赖模块和部署了。</p></blockquote><p><a name="vvhh9"></a></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a class="link"   href="https://tommy.net.cn/2020/08/06/deploy-hexo-with-github-actions/" >1、用 GitHub Actions 来自动部署 Hexo<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a name=&quot;JnUTE&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1、本地安装Hexo&quot;&gt;&lt;a href=&quot;#1、本地安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;1、本地安装Hexo&quot;&gt;&lt;/a&gt;1、本地安装Hexo&lt;/h1&gt;&lt;p&gt;&lt;br /&gt;Hexo</summary>
      
    
    
    
    <category term="网站建设" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="Hexo" scheme="https://howarzheng.com/tags/Hexo/"/>
    
    <category term="Github Actions" scheme="https://howarzheng.com/tags/Github-Actions/"/>
    
    <category term="Github Pages" scheme="https://howarzheng.com/tags/Github-Pages/"/>
    
  </entry>
  
  <entry>
    <title>宝塔面板部署Hexo</title>
    <link href="https://howarzheng.com/2022/01/19/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2Hexo/"/>
    <id>https://howarzheng.com/2022/01/19/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E9%83%A8%E7%BD%B2Hexo/</id>
    <published>2022-01-19T06:32:26.000Z</published>
    <updated>2022-01-27T03:10:03.328Z</updated>
    
    <content type="html"><![CDATA[<p>因为现在还是学生，可以购买阿里云的学生机。</p><p>于是购买了3个月的阿里云服务器ESC，准备撸来玩玩。之前看了好多教程，想直接搭建Git和Nginx环境，然后慢慢配置，然而每次都有报错的地方，谷歌了好久还是没有解决。最后想利用宝塔面板试试。宝塔已经预装了Git环境，只需要安装Nginx即可。</p><p>宝塔系统依托Centos开发，所以我们服务器系统选择Centos7+</p><h2 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p>安装完成后，登录宝塔，首次登陆会提示我们安装环境，我们勾选Nginx即可。</p><p>之后，我们在home文件夹下新建git，hexo这两个文件夹。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/27/c9u8DNSefF1Wsj2.jpg"                      alt="image"                >                                </p><p><strong>随后，我们通过阿里云或者xshell登录我们的服务器，依次执行</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ..   //这里是因为默认执行目录是root，需要返回根目录</span><br><span class="line">cd home</span><br><span class="line">cd git</span><br><span class="line">git init --bare hexoBlog.git</span><br></pre></td></tr></table></figure><p>接着，在目录 <code>/home/git/hexoBlog.git/hooks</code>下新建文件post-receive，写入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/home/hexo --git-dir=/home/git/hexoBlog.git checkout -f</span><br></pre></td></tr></table></figure><p>注意！这里的文件不要在宝塔里直接新建，需要通过连接服务器使用命令新建：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/hexoBlog.git/hooks  </span><br><span class="line">vim post-receive</span><br></pre></td></tr></table></figure><p><strong>给post-receive权限</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /home/git/hexoBlog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>宝塔面板默认的nginx配置文件在根目录-&gt;www-&gt;serve-&gt;nginx-&gt;conf下，找到nginx.conf，编辑它，如图：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/27/xd2zNkWqCjwSZU8.jpg"                      alt="image"                ></p><p>重启Nginx服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure><h2 id="本地Hexo配置"><a href="#本地Hexo配置" class="headerlink" title="本地Hexo配置"></a>本地Hexo配置</h2><p>按照这个格式配置，如果你只推送到aliyun就配置那一行就行了，推送到多个平台务必按照以下格式进行填写（注意缩进）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">      github: git@github.com:HowarZheng/howarzheng.github.io.git,master</span><br><span class="line">      coding: https://git.dev.tencent.com/xigzheng/xigzheng.git,master</span><br><span class="line">      #gitee: https://gitee.com/howarzheng_001/howarzheng_001.git,master</span><br><span class="line">      aliyun: root@120.55.161.99:/home/git/hexoBlog</span><br></pre></td></tr></table></figure><p>这时候已经完成一大半了，<code>hexo clean&amp;&amp;hexo g&amp;&amp;hexo d</code>部署后已经可以通过域名访问你的Hexo博客了。</p><p><strong>接下来在宝塔面板里添加网站：</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip1.loli.io/2022/01/27/qDV3ekwMTG6A1jn.jpg"                      alt="image"                ></p><p>网站目录选择<code>/home/hexo</code></p><p>之后在阿里云将域名解析到服务器ip即可。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip1.loli.io/2022/01/27/9oBmZsSu8iAbXcD.jpg"                      alt="image"                ></p><h2 id="SSL证书申请"><a href="#SSL证书申请" class="headerlink" title="SSL证书申请"></a>SSL证书申请</h2><p>宝塔可以免费申请SSL证书，并进行强制<code>https</code>访问：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/27/wct4FXZaD6krbEO.jpg"                      alt="image"                ></p><blockquote><p>参考文献：</p></blockquote><ol><li><a class="link"   href="https://www.leaflag.cn/2019/02/22/%E8%85%BE%E8%AE%AF%E4%BA%91%E9%83%A8%E7%BD%B2Hexo/#%E6%AD%A3%E5%BC%8F%E5%BC%80%E5%A7%8B%EF%BC%81%E9%85%8D%E7%BD%AEGit%EF%BC%81" >腾讯云使用宝塔面板部署Hexo<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.jianshu.com/p/0f9dfa9c141b" >阿里云Centos7+Nginx部署Hexo静态博客<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为现在还是学生，可以购买阿里云的学生机。&lt;/p&gt;
&lt;p&gt;于是购买了3个月的阿里云服务器ESC，准备撸来玩玩。之前看了好多教程，想直接搭建Git和Nginx环境，然后慢慢配置，然而每次都有报错的地方，谷歌了好久还是没有解决。最后想利用宝塔面板试试。宝塔已经预装了Git环境，</summary>
      
    
    
    
    <category term="网站建设" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="Hexo" scheme="https://howarzheng.com/tags/Hexo/"/>
    
    <category term="宝塔" scheme="https://howarzheng.com/tags/%E5%AE%9D%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>宝塔面板安装Cloudreve——自建不限容量的在线网盘</title>
    <link href="https://howarzheng.com/2022/01/19/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85Cloudreve%E2%80%94%E2%80%94%E8%87%AA%E5%BB%BA%E4%B8%8D%E9%99%90%E5%AE%B9%E9%87%8F%E7%9A%84%E5%9C%A8%E7%BA%BF%E7%BD%91%E7%9B%98/"/>
    <id>https://howarzheng.com/2022/01/19/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85Cloudreve%E2%80%94%E2%80%94%E8%87%AA%E5%BB%BA%E4%B8%8D%E9%99%90%E5%AE%B9%E9%87%8F%E7%9A%84%E5%9C%A8%E7%BA%BF%E7%BD%91%E7%9B%98/</id>
    <published>2022-01-19T06:32:13.000Z</published>
    <updated>2022-01-27T03:10:51.925Z</updated>
    
    <content type="html"><![CDATA[<p>Github：<a class="link"   href="https://github.com/cloudreve/Cloudreve" >https://github.com/cloudreve/Cloudreve<i class="fas fa-external-link-alt"></i></a></p><blockquote><p>官方文档：<a class="link"   href="https://docs.cloudreve.org/" >https://docs.cloudreve.org/<i class="fas fa-external-link-alt"></i></a></p><p><strong>部署环境：CentOS 7.6/Nginx -Tengine2.2.4/MySQL 5.7.30</strong></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1.Releases下载程序到本地：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/cloudreve/Cloudreve/releases/download/3.1.1/cloudreve_3.1.1_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><p>在 /home 目录新建一个程序文件夹，方便日后文件管理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/cloudreve</span><br></pre></td></tr></table></figure><p>将下载的程序解压到 /home/cloudreve 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -C /home/cloudreve -xzf cloudreve_3.1.1_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><p>进入程序目录赋予执行权限，并启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入程序目录</span></span><br><span class="line"><span class="built_in">cd</span> /home/cloudreve</span><br><span class="line"><span class="comment"># 赋予执行权限</span></span><br><span class="line">chmod +x ./cloudreve</span><br><span class="line"><span class="comment"># 启动 Cloudreve</span></span><br><span class="line">./cloudreve</span><br></pre></td></tr></table></figure><p>不出意外的话会跳出程序初始化界面，记得保存账号密码。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/27/8ISaRh5cDn7LtNY.jpg"                      alt="image"                ></p><p>放行 5212 端口（我是宝塔，后台添加放行端口即可 )。访问 <a class="link"   href="http://ip:5212/" >http://ip:5212<i class="fas fa-external-link-alt"></i></a> 看看程序是否正常开启，同时 Shell 也会跑出记录。<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/27/P1oWftS8Uv2u7dD.jpg"                      alt="image"                ><br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/27/vHADRozQXK8ShP4.jpg"                      alt="image"                ></p><p>确认无误后，Shell 面板 Ctrl+ C 结束程序运行, 配置 Systemd 进程守  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/cloudreve.service</span><br></pre></td></tr></table></figure><p>根据实际情况填写以下内容并保存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Cloudreve</span><br><span class="line">Documentation=https://docs.cloudreve.org</span><br><span class="line">After=network.target</span><br><span class="line">Wants=network.target</span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/home/cloudreve</span><br><span class="line">ExecStart=/home/cloudreve/cloudreve</span><br><span class="line">Restart=on-abnormal</span><br><span class="line">RestartSec=5s</span><br><span class="line">KillMode=mixed</span><br><span class="line">StandardOutput=null</span><br><span class="line">StandardError=syslog</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>其中以下配置项需要根据实际情况更改：</p><ul><li><p><strong>WorkingDirectory</strong> 主程序所在目录</p></li><li><p>设置开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> cloudreve</span><br></pre></td></tr></table></figure></li></ul><p>日后你可以通过以下指令管理 Cloudreve 进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl start cloudreve</span><br><span class="line"><span class="comment"># 停止服务 </span></span><br><span class="line">systemctl stop cloudreve</span><br><span class="line"><span class="comment"># 重启服务 </span></span><br><span class="line">systemctl restart cloudreve</span><br><span class="line"><span class="comment"># 查看状态 </span></span><br><span class="line">systemctl status cloudreve</span><br></pre></td></tr></table></figure><p>最后 Nginx 反代一波，宝塔添加一个站点，解析好域名, 站点修改添加反向代理:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/27/8ISaRh5cDn7LtNY.jpg"                      alt="image"                ></p><p>添加完反代后便可以通过自己的域名访问了，程序的部署到这里也算基本完成了。</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>接下来进行一些小调整，Cloudreve 默认数据库内置的 SQLite，个人还是喜欢 Mysql。</p><p>Tips: 更换数据库配置后，Cloudreve 会重新初始化数据库，原有的数据将会丢失。</p><p>宝塔创建一个数据库，然后编辑 Cloudreve 的配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /home/cloudreve/conf.ini</span><br></pre></td></tr></table></figure><p>添加以下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Database]</span><br><span class="line">; 数据库类型，目前支持 sqlite | mysql</span><br><span class="line">Type = mysql</span><br><span class="line">; 用户名</span><br><span class="line">User = root</span><br><span class="line">; 密码</span><br><span class="line">Password = root</span><br><span class="line">; 数据库地址</span><br><span class="line">Host = 127.0.0.1</span><br><span class="line">; 数据库名称</span><br><span class="line">Name = v3</span><br><span class="line">; 数据表前缀</span><br><span class="line">TablePrefix = Cloudreve</span><br></pre></td></tr></table></figure><p>保存后，进程序目录重新初始化，生成新的账号密码，之后再用 systemctl 管理，完事了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进程序目录</span></span><br><span class="line"><span class="built_in">cd</span> /home/cloudreve</span><br><span class="line"><span class="comment">#启动程序</span></span><br><span class="line">./cloudreve</span><br></pre></td></tr></table></figure><p>另外提一嘴，程序默认监听端口也是在该文件修改。</p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p><strong>V3 版本内升级步骤较为简单，总体流程如下：</strong></p><ol><li><p>备份数据库；</p></li><li><p>下载或构建最新版本的 Cloudreve；</p></li><li><p>停止正在运行的 Cloudreve；</p></li><li><p>将老版本的 Cloudreve 主程序替换为新版本；</p></li><li><p>启动 Cloudreve；</p></li><li><p>清空浏览器缓存。</p><blockquote><p>如果你在老版本使用了自行构建的前端静态资源文件，请使用新版对应的前端仓库代码重新构建。</p></blockquote></li></ol><h2 id="对接OneDrive"><a href="#对接OneDrive" class="headerlink" title="对接OneDrive"></a>对接OneDrive</h2><p>1、前往<a class="link"   href="https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview" >Azure Active Directory 控制台 (国际版账号)<i class="fas fa-external-link-alt"></i></a> 或者 <a class="link"   href="https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview" >Azure Active Directory 控制台 (世纪互联账号)<i class="fas fa-external-link-alt"></i></a>并登录，登录后进入<code>Azure Active Directory</code>管理面板。</p><p>2、进入左侧 <code>应用注册</code> 菜单，并点击 <code>新注册</code> 按钮。</p><p>3、填写应用注册表单。其中，名称可任取；<code>受支持的帐户类型</code> 选择为<code>任何组织目录(任何 Azure AD 目录 - 多租户)中的帐户</code>；<code>重定向 URI (可选)</code>请选择<code>Web</code>，并填写<code>https://drive.codebaby.com.cn/api/v3/callback/onedrive/auth</code>； 其他保持默认即可</p><p>4、创建秘钥。</p><p>5、复制秘钥和ID到OneDrive存储策略页面，并填写相关资料，授权登陆即可。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><strong>更多安装方式和程序配置添加详见官方文档</strong> （作者文档也咕了不少：</p><blockquote><p><a class="link"   href="https://docs.cloudreve.org/getting-started/config" >https://docs.cloudreve.org/getting-started/config<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="附一个自己搭建的网盘"><a href="#附一个自己搭建的网盘" class="headerlink" title="附一个自己搭建的网盘"></a>附一个自己搭建的网盘</h2><p>网址：<a class="link"   href="https://drive.codebaby.com.cn/" >https://drive.codebaby.com.cn/<i class="fas fa-external-link-alt"></i></a><br>欢迎大家注册使用，<strong>不限容量！！！</strong>文件用OneDrive存储。【暂停使用！！！】</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a class="link"   href="https://www.feiyubk.com/archives/8.html" >https://www.feiyubk.com/archives/8.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Github：&lt;a class=&quot;link&quot;   href=&quot;https://github.com/cloudreve/Cloudreve&quot; &gt;https://github.com/cloudreve/Cloudreve&lt;i class=&quot;fas fa-external-l</summary>
      
    
    
    
    <category term="网站建设" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="宝塔" scheme="https://howarzheng.com/tags/%E5%AE%9D%E5%A1%94/"/>
    
    <category term="clouddreve" scheme="https://howarzheng.com/tags/clouddreve/"/>
    
    <category term="网盘" scheme="https://howarzheng.com/tags/%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>Python中函数和方法的区别</title>
    <link href="https://howarzheng.com/2022/01/09/python%E4%B8%AD%E5%87%BD%E6%95%B0%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://howarzheng.com/2022/01/09/python%E4%B8%AD%E5%87%BD%E6%95%B0%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-01-09T07:32:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>python中函数和方法是两个容易混淆的概念，他们其实有很多区别。</em><br><a name="toc-heading-1"></a></p><h2 id="1-所处位置不同"><a href="#1-所处位置不同" class="headerlink" title="1. 所处位置不同"></a>1. 所处位置不同</h2><p>函数是直接写文件中而不是class中，方法是只能写在class中。<br><a name="toc-heading-2"></a></p><h2 id="2-定义方式不同"><a href="#2-定义方式不同" class="headerlink" title="2. 定义方式不同"></a>2. 定义方式不同</h2><p>函数定义的方式 def关键字 然后接函数名 再是括号 括号里面写形参也可以省略不写形参。<br />例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">functionName</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;这里是函数的注释&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;这一块写函数的内容&quot;</span>)</span><br></pre></td></tr></table></figure><p>而方法的定义和函数有点区别，方法必须带一个默认参数，静态方法除外。<br><a name="toc-heading-3"></a></p><h2 id="3-调用的方式不同"><a href="#3-调用的方式不同" class="headerlink" title="3. 调用的方式不同"></a>3. 调用的方式不同</h2><ol><li>函数的调用：函数的调用是直接写 函数名(函数参数1,函数参数2,……)<br /></li><li>方法的调用：方法是通过对象点方法调用的（这里是指对象方法）<br /></li></ol><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">className</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">method</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;这是一个方法&quot;</span>)</span><br><span class="line"><span class="comment">#调用---------------------</span></span><br><span class="line"><span class="comment">#实例化对象</span></span><br><span class="line">c=className()</span><br><span class="line">c.method()</span><br></pre></td></tr></table></figure><p><strong>总结：</strong></p><ol><li>函数是封装了一些独立的功能，可以直接调用，能将一些数据（参数）传递进去进行处理，然后返回一些数据（返回值），也可以没有返回值。可以直接在模块中进行定义使用。<br />所有传递给函数的数据都是显式传递的。<br /></li><li>方法和函数类似，同样封装了独立的功能，但是方法是只能依靠类或者对象来调用的，表示针对性的操作。<br />方法中的数据self和cls是隐式传递的，即方法的调用者；<br />方法可以操作类内部的数据 <strong>简单的说，函数在python中独立存在，可直接使用的，而方法是必须被别人调用才能实现的</strong>。静态方法除外（与类和对象均无关，通过类名和对象名均可被调用，属函数）<br /></li></ol><p>不过也要摒弃<strong>错误认知</strong>：并不是类中的调用都叫方法<br />例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="comment">#实例化</span></span><br><span class="line">obj = Foo()</span><br><span class="line"><span class="comment"># 执行方式一:调用的func是方法</span></span><br><span class="line">obj.func() <span class="comment">#func 方法</span></span><br><span class="line"><span class="comment"># 执行方式二：调用的func是函数</span></span><br><span class="line">Foo.func(<span class="number">123</span>) <span class="comment"># 函数</span></span><br></pre></td></tr></table></figure><blockquote><p>最大的区别是<strong>参数传递</strong>，方法是自动传参self，函数是主动传参</p></blockquote><p>如果自己也不确定，可以打印类型查看：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> types <span class="keyword">import</span> FunctionType,MethodType</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(obj.func,MethodType))    ---&gt;<span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(Foo.func,FunctionType))  ---&gt;<span class="comment"># True</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;em&gt;python中函数和方法是两个容易混淆的概念，他们其实有很多区别。&lt;/em&gt;&lt;br&gt;&lt;a name=&quot;toc-heading-1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-所处位置不同&quot;&gt;&lt;a href=&quot;#1-所处位置不同&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Python" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/Python/"/>
    
    
    <category term="Python" scheme="https://howarzheng.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>利用Aria2打造一个离线的OneDrive网盘</title>
    <link href="https://howarzheng.com/2021/01/13/%E5%88%A9%E7%94%A8Aria2%E6%89%93%E9%80%A0%E4%B8%80%E4%B8%AA%E7%A6%BB%E7%BA%BF%E7%9A%84OneDrive%E7%BD%91%E7%9B%98/"/>
    <id>https://howarzheng.com/2021/01/13/%E5%88%A9%E7%94%A8Aria2%E6%89%93%E9%80%A0%E4%B8%80%E4%B8%AA%E7%A6%BB%E7%BA%BF%E7%9A%84OneDrive%E7%BD%91%E7%9B%98/</id>
    <published>2021-01-13T07:32:26.000Z</published>
    <updated>2022-01-27T03:11:23.130Z</updated>
    
    <content type="html"><![CDATA[<p><a name="toc-heading-1"></a></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>Aria2 有一个配置项<code>on-download-complete</code>，在下载完后执行一个脚本。当下载完成后 Aria2 会给脚本传递3个变量 <code>$1</code>、<code>$2</code>、<code>$3</code> 分别为 gid 、文件数量、文件路径。利用这个配置项和这些变量就可以实现很多功能，比如下载完成后调用 Rclone 进行上传操作。整个过程简单来说就是，Aria2 下载文件到 VPS ，完成后告诉 Rclone 将这个文件上传到网盘。理论上只要是 Rclone 支持的网盘，都可以按照这个思路来实现<del>伪</del>离线下载。并且还可实现下载完成上传OneDrive后自动本地删除，不占用VPS空间。<br><a name="toc-heading-2"></a></p><h2 id="安装-Aria2"><a href="#安装-Aria2" class="headerlink" title="安装 Aria2"></a>安装 Aria2</h2><p>这里使用 Aria2 一键安装管理脚本，执行下面的代码下载并运行脚本，出现脚本操作菜单输入 <code>1</code>开始安装。<br /><code>wget -N https://git.io/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</code><br><a name="toc-heading-3"></a></p><h2 id="安装和配置-Rclone"><a href="#安装和配置-Rclone" class="headerlink" title="安装和配置 Rclone"></a>安装和配置 Rclone</h2><p><code>curl https://rclone.org/install.sh | sudo bash</code><br />安装完后，输入 <code>rclone config</code> 命令进入交互式配置选项，按照提示一步一步来进行操作即可。<br><a name="toc-heading-4"></a></p><h3 id="Rclone配置教程"><a href="#Rclone配置教程" class="headerlink" title="Rclone配置教程"></a>Rclone配置教程</h3><p><strong>获取Token</strong><br />在本地 Windows 电脑上<a class="link"   href="https://rclone.org/downloads/" >下载 rclone<i class="fas fa-external-link-alt"></i></a>，然后解压出来，解压后进入文件夹，在资源管理器地址栏输入<code>cmd</code>，回车就会在当前路径打开命令提示符。输入以下命令：<br /><code>rclone authorize &quot;onedrive&quot;</code><br />接下来会弹出浏览器，要求你登录账号进行授权。授权完后命令提示符窗口会出现以下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">If your browser doesn<span class="string">&#x27;t open automatically go to the following link: http://127.0.0.1:53682/auth</span></span><br><span class="line"><span class="string">Log in and authorize rclone for access</span></span><br><span class="line"><span class="string">Waiting for code...</span></span><br><span class="line"><span class="string">Got code</span></span><br><span class="line"><span class="string">Paste the following into your remote machine ---&gt;</span></span><br><span class="line"><span class="string">&#123;&quot;access_token&quot;:&quot;xxxxxxxx&quot;&#125;  # 注意!复制&#123;xxxxxxxx&#125;整个内容，并保存好，后面需要用到</span></span><br><span class="line"><span class="string">&lt;---End paste</span></span><br></pre></td></tr></table></figure><p>配置Rclone<br />输入 <code>rclone config</code> 命令，会出现以下信息，参照下面的注释进行操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; n  <span class="comment"># 选择n，新建</span></span><br><span class="line">name&gt; P3TERX   <span class="comment"># 输入名称，类似于标签，用于区分不同的网盘。</span></span><br><span class="line">Type of storage to configure.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;&quot;</span>).</span><br><span class="line">Choose a number from below, or <span class="built_in">type</span> <span class="keyword">in</span> your own value</span><br><span class="line"> 1 / A stackable unification remote, <span class="built_in">which</span> can appear to merge the contents of several remotes</span><br><span class="line">   \ <span class="string">&quot;union&quot;</span></span><br><span class="line"> 2 / Alias <span class="keyword">for</span> a existing remote</span><br><span class="line">   \ <span class="string">&quot;alias&quot;</span></span><br><span class="line"> 3 / Amazon Drive</span><br><span class="line">   \ <span class="string">&quot;amazon cloud drive&quot;</span></span><br><span class="line"> 4 / Amazon S3 Compliant Storage Providers (AWS, Ceph, Dreamhost, IBM COS, Minio)</span><br><span class="line">   \ <span class="string">&quot;s3&quot;</span></span><br><span class="line"> 5 / Backblaze B2</span><br><span class="line">   \ <span class="string">&quot;b2&quot;</span></span><br><span class="line"> 6 / Box</span><br><span class="line">   \ <span class="string">&quot;box&quot;</span></span><br><span class="line"> 7 / Cache a remote</span><br><span class="line">   \ <span class="string">&quot;cache&quot;</span></span><br><span class="line"> 8 / Dropbox</span><br><span class="line">   \ <span class="string">&quot;dropbox&quot;</span></span><br><span class="line"> 9 / Encrypt/Decrypt a remote</span><br><span class="line">   \ <span class="string">&quot;crypt&quot;</span></span><br><span class="line">10 / FTP Connection</span><br><span class="line">   \ <span class="string">&quot;ftp&quot;</span></span><br><span class="line">11 / Google Cloud Storage (this is not Google Drive)</span><br><span class="line">   \ <span class="string">&quot;google cloud storage&quot;</span></span><br><span class="line">12 / Google Drive</span><br><span class="line">   \ <span class="string">&quot;drive&quot;</span></span><br><span class="line">13 / Hubic</span><br><span class="line">   \ <span class="string">&quot;hubic&quot;</span></span><br><span class="line">14 / JottaCloud</span><br><span class="line">   \ <span class="string">&quot;jottacloud&quot;</span></span><br><span class="line">15 / Local Disk</span><br><span class="line">   \ <span class="string">&quot;local&quot;</span></span><br><span class="line">16 / Mega</span><br><span class="line">   \ <span class="string">&quot;mega&quot;</span></span><br><span class="line">17 / Microsoft Azure Blob Storage</span><br><span class="line">   \ <span class="string">&quot;azureblob&quot;</span></span><br><span class="line">18 / Microsoft OneDrive</span><br><span class="line">   \ <span class="string">&quot;onedrive&quot;</span></span><br><span class="line">19 / OpenDrive</span><br><span class="line">   \ <span class="string">&quot;opendrive&quot;</span></span><br><span class="line">20 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ <span class="string">&quot;swift&quot;</span></span><br><span class="line">21 / Pcloud</span><br><span class="line">   \ <span class="string">&quot;pcloud&quot;</span></span><br><span class="line">22 / QingCloud Object Storage</span><br><span class="line">   \ <span class="string">&quot;qingstor&quot;</span></span><br><span class="line">23 / SSH/SFTP Connection</span><br><span class="line">   \ <span class="string">&quot;sftp&quot;</span></span><br><span class="line">24 / Webdav</span><br><span class="line">   \ <span class="string">&quot;webdav&quot;</span></span><br><span class="line">25 / Yandex Disk</span><br><span class="line">   \ <span class="string">&quot;yandex&quot;</span></span><br><span class="line">26 / http Connection</span><br><span class="line">   \ <span class="string">&quot;http&quot;</span></span><br><span class="line">Storage&gt; 18  <span class="comment"># 选择18，Microsoft OneDrive</span></span><br><span class="line">** See <span class="built_in">help</span> <span class="keyword">for</span> onedrive backend at: https://rclone.org/onedrive/ **</span><br><span class="line">Microsoft App Client Id</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;&quot;</span>).</span><br><span class="line">client_id&gt;   <span class="comment"># 留空，回车</span></span><br><span class="line">Microsoft App Client Secret</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;&quot;</span>).</span><br><span class="line">client_secret&gt;   <span class="comment"># 留空，回车</span></span><br><span class="line">Edit advanced config? (y/n)</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y/n&gt; n  <span class="comment"># 选n</span></span><br><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y <span class="keyword">if</span> not sure</span><br><span class="line"> * Say N <span class="keyword">if</span> you are working on a remote or headless machine</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y/n&gt; n  <span class="comment"># 选n</span></span><br><span class="line">For this to work, you will need rclone available on a machine that has a web browser available.</span><br><span class="line">Execute the following on your machine:</span><br><span class="line">    rclone authorize <span class="string">&quot;onedrive&quot;</span></span><br><span class="line">Then paste the result below:</span><br><span class="line">result&gt; &#123;<span class="string">&quot;XXXXXXXX&quot;</span>&#125;  <span class="comment"># 上面保存的token复制到这里</span></span><br><span class="line">2018/10/31 19:54:06 ERROR : Failed to save new token <span class="keyword">in</span> config file: section <span class="string">&#x27;P3TERX&#x27;</span> not found</span><br><span class="line">Choose a number from below, or <span class="built_in">type</span> <span class="keyword">in</span> an existing value</span><br><span class="line"> 1 / OneDrive Personal or Business</span><br><span class="line">   \ <span class="string">&quot;onedrive&quot;</span></span><br><span class="line"> 2 / Root Sharepoint site</span><br><span class="line">   \ <span class="string">&quot;sharepoint&quot;</span></span><br><span class="line"> 3 / Type <span class="keyword">in</span> driveID</span><br><span class="line">   \ <span class="string">&quot;driveid&quot;</span></span><br><span class="line"> 4 / Type <span class="keyword">in</span> SiteID</span><br><span class="line">   \ <span class="string">&quot;siteid&quot;</span></span><br><span class="line"> 5 / Search a Sharepoint site</span><br><span class="line">   \ <span class="string">&quot;search&quot;</span></span><br><span class="line">Your choice&gt; 1  <span class="comment"># 这里问你要选择的类型，选1</span></span><br><span class="line">Found 1 drives, please select the one you want to use:</span><br><span class="line">0: OneDrive (business) </span><br><span class="line">Chose drive to use:&gt; 0  <span class="comment"># 程序找到网盘，这里编号是0，就选择0</span></span><br><span class="line">Found drive <span class="string">&#x27;root&#x27;</span> of <span class="built_in">type</span> <span class="string">&#x27;business&#x27;</span>, URL: https://xxxxxx-my.sharepoint.com/personal/xxxxxxx/Documents</span><br><span class="line">Is that okay?</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y/n&gt; y  <span class="comment"># 选y</span></span><br><span class="line">--------------------</span><br><span class="line">[P3TERX]</span><br><span class="line"><span class="built_in">type</span> = onedrive</span><br><span class="line">token = &#123;<span class="string">&quot;XXXXXXXX&quot;</span>&#125;</span><br><span class="line">drive_id = XXXXXXXXX</span><br><span class="line">drive_type = business</span><br><span class="line">--------------------</span><br><span class="line">y) Yes this is OK</span><br><span class="line">e) Edit this remote</span><br><span class="line">d) Delete this remote</span><br><span class="line">y/e/d&gt; y  <span class="comment"># 选y</span></span><br><span class="line">Current remotes:</span><br><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">P3TERX               onedrive</span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; q  <span class="comment"># 选q，退出</span></span><br></pre></td></tr></table></figure><p>至此，Rclone 已成功连接到了 OneDrive 网盘。<br><a name="toc-heading-5"></a></p><h2 id="配置自动上传脚本"><a href="#配置自动上传脚本" class="headerlink" title="配置自动上传脚本"></a>配置自动上传脚本</h2><p>Aria2 一键安装管理脚本整合了 Aria2 完美配置 ，安装时会下载自动上传脚本。考虑到不是所有人都需要上传，默认不启用，需要手动启用。<br />输入<code>nano /root/.aria2/autoupload.sh</code>打开自动上传脚本进行编辑，脚本中有中文注释，按照自己的实际情况进行修改，一般只需要修改下面2个部分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&#x27;Onedrive&#x27;</span> <span class="comment">#配置Rclone时的name</span></span><br><span class="line">folder=<span class="string">&#x27;/DRIVEX/Download&#x27;</span> <span class="comment">#网盘里的文件夹，留空为网盘根目录。</span></span><br></pre></td></tr></table></figure><p>输入<code>nano /root/.aria2/aria2.conf</code>打开 Aria2 配置文件进行修改。或使用Aria2 一键安装管理脚本中的手动修改选项打开配置文件进行修改。找到“下载完成后执行的命令”，修改成下面的这样。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 下载完成后执行的命令</span><br><span class="line"># 删除.aria2文件</span><br><span class="line">#on-download-complete=/root/.aria2/delete.aria2.sh</span><br><span class="line"># 调用 rclone 上传(move)到网盘</span><br><span class="line">on-download-complete=/root/.aria2/autoupload.sh</span><br></pre></td></tr></table></figure><blockquote><ul><li>在<code>on-download-complete=/root/.aria2/delete.aria2.sh</code>前加上<code>#</code></li><li>去掉<code>#on-download-complete=/root/.aria2/autoupload.sh</code>前面的<code>#</code></li></ul></blockquote><p><strong>重启 Aria2</strong><br /><code>service aria2 restart</code><br /><strong>当你进行完以上所有操作，现在下载文件就会自动上传至相应的网盘。</strong><br><a name="toc-heading-6"></a></p><h2 id="前端面板使用"><a href="#前端面板使用" class="headerlink" title="前端面板使用"></a>前端面板使用</h2><p>现在，你可用通过命令行利用Aria2下载，不过比较繁琐，可以用一个前端面板进行远程连接下载。<br><a name="toc-heading-7"></a></p><h3 id="安装-AriaNg"><a href="#安装-AriaNg" class="headerlink" title="安装 AriaNg"></a>安装 AriaNg</h3><p>AriaNg是个 Web 前端，在项目的 releases页面下载后，上传至 VPS 进行部署，这里不做过多说明。<del>作者直接提供了一个演示页面，是可以直接使用的。</del></p><blockquote><p><strong>Q：使用他人提供的页面会不会不安全？</strong><br>A：设置是缓存在本地的，所填写的 RPC 地址和 RPC 密钥是不会上传的。如果不放心，可以使用本地程序或者自己部署。建议萌新学习一些建站经验后再尝试自己部署。</p></blockquote><p><a name="toc-heading-8"></a></p><h3 id="本地程序"><a href="#本地程序" class="headerlink" title="本地程序"></a>本地程序</h3><p><a class="link"   href="https://github.com/mayswind/AriaNg-Native/releases/tag/1.1.3" >AriaNg Native<i class="fas fa-external-link-alt"></i></a> 是 Web 前端的本地化程序，比起网页端它功能会多一些，且不需要复杂的部署过程，下载安装后打开就可以使用，支持 Windows 和 macOS<br />另外，手机也有对应的Aria2客户端，例如<a class="link"   href="https://github.com/devgianlu/Aria2App" >Aria2App<i class="fas fa-external-link-alt"></i></a>。<br><a name="toc-heading-9"></a></p><h2 id="前后端连接"><a href="#前后端连接" class="headerlink" title="前后端连接"></a>前后端连接</h2><p>在<code>AriaNg 设置</code>中填写相关 RPC 信息。<code>RPC 地址</code>对应 IP 或域名， <code>RPC 秘钥</code>对应配置文件中<code>rpc-secret</code>选项后面的参数。如果没有过修改端口，就只需要填写<code>RPC 地址</code>和<code>RPC 密钥</code>两项。使用 Aria2 一键安装管理脚本安装后会显示这些信息，设置起来更简单。<br /><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip1.loli.io/2022/01/27/BAwglq9jT1dyohv.jpg"                      alt="image"                ><br /><br><br />在你没有完全了解 Aria2 的情况下，不建议去修改设置，保持默认即可。</p><ul><li>在 AriaNg （或其它前端面板）中修改设置项，只有在运行中才有效，属于临时设置，它不会修改配置文件。重启或关闭 Aria2 后端程序后，会重新读取配置文件。所以必要的设置，需写入配置文件中。</li><li>如果在修改配置文件后，重启 Aria2 的过程中没有关闭 AriaNg ，AriaNg 可能会给服务端传递之前缓存的配置，这就导致修改的配置没有生效（理论上其它前端面板也是这样）<blockquote><p>参考文献：</p></blockquote></li></ul><ol><li><a class="link"   href="https://p3terx.com/archives/aria2-frontend-ariang-tutorial.html" >Aria2 前端面板(GUI) AriaNg 使用教程<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://p3terx.com/archives/offline-download-of-onedrive-gdrive.html" >Aria2 + Rclone 实现 OneDrive、Google Drive 等网盘离线下载<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://p3terx.com/archives/aria2-oneclick-installation-management-script.html" >Aria2 一键安装管理脚本<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://rclone.org/install/#script-installation" >https://rclone.org/install/#script-installation<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://github.com/P3TERX/aria2_perfect_config" >https://github.com/P3TERX/aria2_perfect_config<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://aria2.github.io/manual/en/html/aria2c.html" >Aria2 官方手册<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://rclone.org/docs/" >Rclone 官方手册<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a name=&quot;toc-heading-1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;Aria2 有一个配置项&lt;code&gt;on-download-comp</summary>
      
    
    
    
    <category term="网站建设" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="Aria2" scheme="https://howarzheng.com/tags/Aria2/"/>
    
    <category term="Rclone" scheme="https://howarzheng.com/tags/Rclone/"/>
    
  </entry>
  
  <entry>
    <title>Python虚拟环境——virtualenv</title>
    <link href="https://howarzheng.com/2020/09/13/Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E2%80%94%E2%80%94virtualenv/"/>
    <id>https://howarzheng.com/2020/09/13/Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E2%80%94%E2%80%94virtualenv/</id>
    <published>2020-09-13T00:42:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>virtualenv是Python的一个工具包，可以创建完全隔离的Python环境，让一台电脑上同时拥有几个ython2和Python3的环境。</em><br><a name="toc-heading-1"></a></p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p><strong>安装</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br><span class="line">mkdir my_project_dir</span><br><span class="line">cd my_project_dir</span><br><span class="line">virtualenv venv <span class="comment">#venv为虚拟环境的目录名，目录名可以自定义</span></span><br></pre></td></tr></table></figure><p><strong>不过，也定义自定义python解释器</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv -p /usr/<span class="built_in">bin</span>/python3<span class="number">.7</span> venv <span class="comment"># -p参数用来指定Python解释器</span></span><br></pre></td></tr></table></figure><p><br /><strong>激活环境</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source venv/<span class="built_in">bin</span>/activate</span><br></pre></td></tr></table></figure><p>从现在起，利用pip安装的任何包都会放在venv文件夹中。<br /><strong>暂停环境</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. venv/<span class="built_in">bin</span>/deactivate</span><br></pre></td></tr></table></figure><p><strong>删除环境</strong><br />因为该虚拟环境是完全隔离的，因此删除该虚拟环境对应的文件夹就行了。<br><a name="toc-heading-2"></a></p><h2 id="virtualenvwrapper介绍"><a href="#virtualenvwrapper介绍" class="headerlink" title="virtualenvwrapper介绍"></a>virtualenvwrapper介绍</h2><p>鉴于virtualenv不便于对虚拟环境集中管理，所以推荐直接使用virtualenvwrapper。 virtualenvwrapper提供了一系列命令使得和虚拟环境工作变得便利。它把你所有的虚拟环境都放在一个地方。<br /><strong>安装virtualenvwrapper(确保virtualenv已安装)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenvwrapper</span><br><span class="line">pip install virtualenvwrapper-win　　<span class="comment">#Windows使用该命令</span></span><br></pre></td></tr></table></figure><p><strong>安装完成后，在~/.bashrc写入以下内容</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export WORKON_HOME=~/Envs</span><br><span class="line">source /usr/local/<span class="built_in">bin</span>/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure><p>第一行：virtualenvwrapper存放虚拟环境目录<br />第二行：virtrualenvwrapper会安装到python的bin目录下，所以该路径是python安装目录下bin/virtualenvwrapper.sh</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc　　　　<span class="comment">#读入配置文件，立即生效</span></span><br></pre></td></tr></table></figure><p><a name="toc-heading-3"></a></p><h2 id="virtualenvwrapper基本使用"><a href="#virtualenvwrapper基本使用" class="headerlink" title="virtualenvwrapper基本使用"></a>virtualenvwrapper基本使用</h2><p><a name="toc-heading-4"></a></p><h3 id="1-创建虚拟环境-mkvirtualenv"><a href="#1-创建虚拟环境-mkvirtualenv" class="headerlink" title="1.创建虚拟环境　mkvirtualenv"></a>1.创建虚拟环境　mkvirtualenv</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkvirtualenv venv</span><br></pre></td></tr></table></figure><p>这样会在WORKON_HOME变量指定的目录下新建名为venv的虚拟环境。<br />若想指定python版本，可通过”–python”指定python解释器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkvirtualenv --python=/usr/local/python3<span class="number">.5</span><span class="number">.3</span>/<span class="built_in">bin</span>/python venv</span><br></pre></td></tr></table></figure><p><a name="toc-heading-5"></a></p><h3 id="2-基本命令"><a href="#2-基本命令" class="headerlink" title="2. 基本命令"></a>2. 基本命令</h3><p><strong>查看当前的虚拟环境目录</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># workon</span></span><br><span class="line">py2</span><br><span class="line">py3</span><br></pre></td></tr></table></figure><p><strong>切换到虚拟环境</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># workon py3</span></span><br><span class="line">(py3) [root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>退出虚拟环境</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(py3) [root@localhost ~]<span class="comment"># deactivate</span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>删除虚拟环境</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmvirtualenv venv</span><br></pre></td></tr></table></figure><hr><p><strong>参考文献</strong><br /><a class="link"   href="https://www.cnblogs.com/technologylife/p/6635631.html" >https://www.cnblogs.com/technologylife/p/6635631.html<i class="fas fa-external-link-alt"></i></a><br /><a class="link"   href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001432712108300322c61f256c74803b43bfd65c6f8d0d0000" >https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001432712108300322c61f256c74803b43bfd65c6f8d0d0000<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;em&gt;virtualenv是Python的一个工具包，可以创建完全隔离的Python环境，让一台电脑上同时拥有几个ython2和Python3的环境。&lt;/em&gt;&lt;br&gt;&lt;a name=&quot;toc-heading-1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;基本使用&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://howarzheng.com/tags/Python/"/>
    
    <category term="virtualenv" scheme="https://howarzheng.com/tags/virtualenv/"/>
    
  </entry>
  
  <entry>
    <title>Vue文档风格的Typora主题</title>
    <link href="https://howarzheng.com/2019/05/23/Vue%20%E6%96%87%E6%A1%A3%E9%A3%8E%E6%A0%BC%E7%9A%84%20Typora%20%E4%B8%BB%E9%A2%98/"/>
    <id>https://howarzheng.com/2019/05/23/Vue%20%E6%96%87%E6%A1%A3%E9%A3%8E%E6%A0%BC%E7%9A%84%20Typora%20%E4%B8%BB%E9%A2%98/</id>
    <published>2019-05-23T08:32:06.000Z</published>
    <updated>2022-01-27T03:13:42.385Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://github.com/blinkfox/typora-vue-theme" >Typora-vue-theme<i class="fas fa-external-link-alt"></i></a> 是<a class="link"   href="https://www.typora.io/" > Typora<i class="fas fa-external-link-alt"></i></a> Markdown 文档编辑器中一款类似<a class="link"   href="https://vuejs.org/" >Vue<i class="fas fa-external-link-alt"></i></a>文档风格的主题。<br><a name="toc-heading-1"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a class="link"   href="https://www.typora.io/" >Typora<i class="fas fa-external-link-alt"></i></a>是一款支持实时预览的 Markdown 编辑器和阅读器，支持<code>Windows</code>、<code>macOS</code>、<code>Linux</code>三大平台。Typora 作为一款合格的 Markdown 编辑器，支持图片、列表、表格、代码、公式、目录等功能，同时这款软件还支持（一键）动态预览功能，让一切都变得如此干净、纯粹。并且有多种主题模板。typora-vue-theme就是参考了Vue文档风格而开发的一个 Typora 自定义主题。<br><a name="toc-heading-2"></a></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1.下载本主题中的vue.css、vue-dark.css文件和包含字体的vue文件夹；<br />2.打开 Typora，点击<strong>文件</strong>-<strong>偏好设置</strong> =&gt; <strong>打开主题文件夹</strong>按钮，将弹出 Typora 的主题文件夹；<br />3.将下载好的vue.css和vue-dark.css文件和包含字体的vue文件夹放到 Typora 的主题文件夹中；<br />4.关闭并重新打开 Typora，从菜单栏中选择 “主题” =&gt; “Vue” 或者 “Vue Dark” 即可。<br><a name="toc-heading-3"></a></p><h3 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://vip2.loli.io/2022/01/27/dGpfFNv7KALHEg3.jpg"                      alt="image"                ></p><blockquote><p>参考文献：</p></blockquote><p><a class="link"   href="https://blinkfox.github.io/2018/11/19/ruan-jian-gong-ju/markdown/vue-wen-dang-feng-ge-de-typora-zhu-ti/" >Vue 文档风格的 Typora 主题<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/blinkfox/typora-vue-theme&quot; &gt;Typora-vue-theme&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt; 是&lt;a c</summary>
      
    
    
    
    <category term="网络资源" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="Typora" scheme="https://howarzheng.com/tags/Typora/"/>
    
    <category term="Vue" scheme="https://howarzheng.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>前后端同学必会的Linux基础命令</title>
    <link href="https://howarzheng.com/2018/08/13/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%90%8C%E5%AD%A6%E5%BF%85%E4%BC%9A%E7%9A%84Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    <id>https://howarzheng.com/2018/08/13/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%90%8C%E5%AD%A6%E5%BF%85%E4%BC%9A%E7%9A%84Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</id>
    <published>2018-08-13T05:34:46.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><a name="toc-heading-1"></a></p><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><p><a name="toc-heading-2"></a></p><h3 id="1、进入目录"><a href="#1、进入目录" class="headerlink" title="1、进入目录"></a>1、进入目录</h3><p><code>cd 目录名</code><br><a name="toc-heading-3"></a></p><h3 id="2、显示当前路径"><a href="#2、显示当前路径" class="headerlink" title="2、显示当前路径"></a>2、显示当前路径</h3><p><code>pwd</code><br><a name="toc-heading-4"></a></p><h3 id="3、显示路径下的文件"><a href="#3、显示路径下的文件" class="headerlink" title="3、显示路径下的文件"></a>3、显示路径下的文件</h3><p><code>ls</code><br /><code>ls -a 显示隐藏文件。隐藏文件以 . 开头命名</code><br><a name="toc-heading-5"></a></p><h3 id="4、查看创建文本"><a href="#4、查看创建文本" class="headerlink" title="4、查看创建文本"></a>4、查看创建文本</h3><p><code>touch abc.txt 查看abc.txt 如果不存在则自动创建</code><br><a name="toc-heading-6"></a></p><h3 id="5、创建文件夹"><a href="#5、创建文件夹" class="headerlink" title="5、创建文件夹"></a>5、创建文件夹</h3><p><code>mkdir 文件名 当前目录创建一个文件夹</code><br /><code>mkdir -p name1/name2 当期目录递归创建name1/name2文件，如 提示 mkdir: xxx: Permission denied，则需要admin账号 sudo -i 输入密码 即可</code><br><a name="toc-heading-7"></a></p><h3 id="6、重命名操作"><a href="#6、重命名操作" class="headerlink" title="6、重命名操作"></a>6、重命名操作</h3><p><code>mv test test1 把test文件的名字修改为test1</code><br /><code>mv test1 /home/wechat/ 将test1文件 移动到/home/wechat 目录下</code><br><a name="toc-heading-8"></a></p><h3 id="7、删除操作"><a href="#7、删除操作" class="headerlink" title="7、删除操作"></a>7、删除操作</h3><p><code>rm file 删除file文件(存在子文件时不可删除)</code><br /><code>rm -r /file 删除file文件下的所有目录文件</code><br /><code>rm -rf ./* 删库跑路专用命令</code><br><a name="toc-heading-9"></a></p><h3 id="8、复制"><a href="#8、复制" class="headerlink" title="8、复制"></a>8、复制</h3><p><code>cp file /home 复制file命令至home目录下</code><br /><code>cp -r test /home/wechat 复制test文件夹和其所有子文件 至 /home/wechat目录下</code><br /><code>cp -r test /home/wechat/test2 复制test文件夹和其所有子文件 至 /home/wechat目录下并重命名为test2</code><br><a name="toc-heading-10"></a></p><h3 id="9、压缩、解压"><a href="#9、压缩、解压" class="headerlink" title="9、压缩、解压"></a>9、压缩、解压</h3><p>解压tar<br /><code>tar xvf test.tar</code><br />压缩tar<br /><code>tar cvf test1.tar name 将name文件夹压缩为test1.tar</code><br />解压tar.gz<br /><code>tar zxvf test.tar.gz</code><br />压缩<br /><code>tar zxvf test.tar.gz name</code><br><a name="toc-heading-11"></a></p><h2 id="查找-amp-amp-日志"><a href="#查找-amp-amp-日志" class="headerlink" title="查找 &amp;&amp; 日志"></a>查找 &amp;&amp; 日志</h2><p><a name="toc-heading-12"></a></p><h3 id="1、cat、more、less命令"><a href="#1、cat、more、less命令" class="headerlink" title="1、cat、more、less命令"></a>1、cat、more、less命令</h3><p><code>cat test.log 查看test.log 的文件内容</code><br /><code>cat -n test.log 查看test.log的文件内容并显示行号</code><br />more、less和cat作用基本相同，只不过more可以按页码来查看。 都是按q退出查看使用命令时，空格键翻页(显示下一屏内容)<br />回车：显示下一行内容<br><a name="toc-heading-13"></a></p><h3 id="2、find命令"><a href="#2、find命令" class="headerlink" title="2、find命令"></a>2、find命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.代表当前目录</span><br><span class="line">find . -name <span class="string">&#x27;*.txt&#x27;</span>          查找当前目录及其子目录下扩展名为txt的文件</span><br><span class="line">find . -mtime -2             列出两天内修改过的文件</span><br><span class="line">find . -atime -3             列出三天内被存取的文件</span><br><span class="line">find . -mmin +30             半个小时内被修改过的文件</span><br><span class="line">find . -amin +40              四十分钟内被存取过的文件</span><br><span class="line">find . -size +1M              查找当前目录超过1M的文件</span><br><span class="line">find .  -size -1M              查找当前目录小于1M的文件</span><br><span class="line">find .  -size   +512k          超过512k的文件</span><br><span class="line">find . -empty                  查找当前目录为空的文件或者文件夹</span><br></pre></td></tr></table></figure><p><a name="toc-heading-14"></a></p><h3 id="3、whereis命令"><a href="#3、whereis命令" class="headerlink" title="3、whereis命令"></a>3、whereis命令</h3><p><code>whereis name/ 搜索name文件的路径</code><br><a name="toc-heading-15"></a></p><h3 id="4、grep命令"><a href="#4、grep命令" class="headerlink" title="4、grep命令"></a>4、grep命令</h3><p><code>ps -ef|grep nginx 查看nginx的进程</code><br /><code>ps -ef|grep nginx -c 查看nginx的进程个数</code><br /><code>cat test.log | grep ^a 查找test.log 中以o开头的内容</code><br /><code>cat test.log | grep $k 查找test.log中以K结尾的内容</code><br /><code>cat test.log | grep &#39;bd4f63cc918611e8a14f7c04d0d7fdcc&#39; --color 在test.log中搜索bd4f63cc918611e8a14f7c04d0d7fdcc并高亮，等同于 grep &#39;bd4f63cc918611e8a14f7c04d0d7fdcc&#39; test.log --color</code><br /><code>grep -n &#39;abc&#39; test.log 搜索结果显示行数</code><br /><code>grep &#39;abc&#39; test1.log test2.log 从多个文件中查找abc</code><br><a name="toc-heading-16"></a></p><h3 id="5、tail命令"><a href="#5、tail命令" class="headerlink" title="5、tail命令"></a>5、tail命令</h3><p><code>tail -f xxx.log 查看xxx.log 默认显示最后10行</code><br /><code>tail -f 100 xx.log /tail -100f xx.log 查看100行</code><br><a name="toc-heading-17"></a></p><h3 id="6、vim命令"><a href="#6、vim命令" class="headerlink" title="6、vim命令"></a>6、vim命令</h3><p><code>vim</code><br /><code>vim file 查看文本</code><br /><code>vim file1 file2 ... 查看多个文本</code><br />正常模式/vim模式 通过<strong>ESC</strong>进行切换<br />vim模式下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">i：在当前位置插入</span><br><span class="line">dd： 删除光标所在行</span><br><span class="line">D:删除光标所在行</span><br><span class="line">2dd: 删除光标之后的2行</span><br><span class="line">G：切换光标至末尾</span><br><span class="line">w! 强制写入</span><br><span class="line">wq 保存并退出</span><br><span class="line">q！ 强制退出 不保存</span><br><span class="line">/abc  在文本中查找abc</span><br><span class="line"><span class="built_in">set</span> nu 显示文本行数</span><br><span class="line">移动光标 k(上)、j(下)、h(左)、l(右)</span><br><span class="line">yy 复制光标所在行</span><br><span class="line">p粘贴复制的</span><br><span class="line">o:另起一行</span><br></pre></td></tr></table></figure><p><a name="toc-heading-18"></a></p><h2 id="其他常用操作"><a href="#其他常用操作" class="headerlink" title="其他常用操作"></a>其他常用操作</h2><p><a name="toc-heading-19"></a></p><h3 id="1、查看用户信息"><a href="#1、查看用户信息" class="headerlink" title="1、查看用户信息"></a>1、查看用户信息</h3><p><code>w</code><br /><code>who</code><br><a name="toc-heading-20"></a></p><h3 id="2、修改文件权限"><a href="#2、修改文件权限" class="headerlink" title="2、修改文件权限"></a>2、修改文件权限</h3><p><code>chmod 777 file1 每个人都可以对file文件进行读写和执行的权限</code><br /><code>chmod 666 file1 每个人都可以对file文件进行读写操作</code><br><a name="toc-heading-21"></a></p><h3 id="3、系统级别"><a href="#3、系统级别" class="headerlink" title="3、系统级别"></a>3、系统级别</h3><p><code>top 实时显示系统资源使用情况</code><br /><code>dh -h 查看当前那磁盘使用情况</code><br /><code>du -sh /usr 计算usr文件大小</code><br /><code>netstat –a 列出 tcp, udp 和 unix 协议下所有套接字的所有连接</code><br /><code>kill 端口号 终止该端口</code><br /><code>kill -9 端口 立即强制终止端口</code><br /><code>rz lz 上传 和下载文件</code></p><blockquote><p>参考文献：</p></blockquote><ol><li><a class="link"   href="https://zhuanlan.zhihu.com/p/51796190" >前后端同学必会的Linux基础命令<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a name=&quot;toc-heading-1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h2&gt;&lt;p&gt;&lt;a name=&quot;toc-heading-2&quot;&gt;&lt;/a&gt;&lt;/</summary>
      
    
    
    
    <category term="编程笔记" scheme="https://howarzheng.com/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="https://howarzheng.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>一款高效去除PDF水印的软件</title>
    <link href="https://howarzheng.com/2018/06/13/%E4%B8%80%E6%AC%BE%E9%AB%98%E6%95%88%E5%8E%BB%E9%99%A4PDF%E6%B0%B4%E5%8D%B0%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    <id>https://howarzheng.com/2018/06/13/%E4%B8%80%E6%AC%BE%E9%AB%98%E6%95%88%E5%8E%BB%E9%99%A4PDF%E6%B0%B4%E5%8D%B0%E7%9A%84%E8%BD%AF%E4%BB%B6/</id>
    <published>2018-06-13T07:32:26.000Z</published>
    <updated>2022-01-26T15:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>软件名称：万彩办公大师OfficeBox<br />官网：<a class="link"   href="http://www.wofficebox.com/" >http://www.wofficebox.com/<i class="fas fa-external-link-alt"></i></a><br />绿色免安装版：<a class="link"   href="https://www.yuque.com/attachments/yuque/0/2020/zip/641947/1594430587122-0ec758a1-2387-405e-9ccf-3ba812935c70.zip?_lake_card=%7B%22uid%22:%221594430490688-0%22,%22src%22:%22https://www.yuque.com/attachments/yuque/0/2020/zip/641947/1594430587122-0ec758a1-2387-405e-9ccf-3ba812935c70.zip%22,%22name%22:%22OfficeBox%E5%AE%98%E6%96%B9%E7%BB%BF%E8%89%B2%E7%89%88.zip%22,%22size%22:19104196,%22type%22:%22application/x-zip-compressed%22,%22ext%22:%22zip%22,%22progress%22:%7B%22percent%22:99%7D,%22status%22:%22done%22,%22percent%22:0,%22id%22:%22M3huC%22,%22card%22:%22file%22%7D" >OfficeBox官方绿色版.zip<i class="fas fa-external-link-alt"></i></a><br /><a class="link"   href="https://www.yuque.com/attachments/yuque/0/2020/zip/641947/1594585152962-1fee698c-c1d6-4e0c-ae9c-3f840070d50d.zip?_lake_card=%7B%22uid%22:%221594584938123-0%22,%22src%22:%22https://www.yuque.com/attachments/yuque/0/2020/zip/641947/1594585152962-1fee698c-c1d6-4e0c-ae9c-3f840070d50d.zip%22,%22name%22:%22OfficeBox%E7%A6%BB%E7%BA%BF%E6%89%93%E5%8C%85%E7%89%88.zip%22,%22size%22:331797785,%22type%22:%22application/x-zip-compressed%22,%22ext%22:%22zip%22,%22progress%22:%7B%22percent%22:99%7D,%22status%22:%22done%22,%22percent%22:0,%22id%22:%22AU9TO%22,%22card%22:%22file%22%7D" >OfficeBox离线打包版.zip<i class="fas fa-external-link-alt"></i></a><br /></p><p><a name="kX8zb"></a></p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>有手就能学废。。。看软件说明啊~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;软件名称：万彩办公大师OfficeBox&lt;br /&gt;官网：&lt;a class=&quot;link&quot;   href=&quot;http://www.wofficebox.com/&quot; &gt;http://www.wofficebox.com/&lt;i class=&quot;fas fa-external-lin</summary>
      
    
    
    
    <category term="网络资源" scheme="https://howarzheng.com/categories/%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="万彩办公大师" scheme="https://howarzheng.com/tags/%E4%B8%87%E5%BD%A9%E5%8A%9E%E5%85%AC%E5%A4%A7%E5%B8%88/"/>
    
  </entry>
  
</feed>
